Terminais sem uso na gramática

   ENTER


Estado 57 conflitos: 54 de deslocamento/redução
Estado 58 conflitos: 54 de deslocamento/redução
Estado 76 conflitos: 54 de deslocamento/redução
Estado 105 conflitos: 16 de deslocamento/redução
Estado 148 conflitos: 1 de deslocamento/redução, 1 de redução/redução
Estado 174 conflitos: 1 de deslocamento/redução
Estado 181 conflitos: 54 de deslocamento/redução
Estado 182 conflitos: 54 de deslocamento/redução
Estado 189 conflitos: 54 de deslocamento/redução
Estado 190 conflitos: 54 de deslocamento/redução
Estado 202 conflitos: 8 de deslocamento/redução
Estado 203 conflitos: 8 de deslocamento/redução
Estado 204 conflitos: 8 de deslocamento/redução
Estado 205 conflitos: 8 de deslocamento/redução
Estado 206 conflitos: 8 de deslocamento/redução
Estado 207 conflitos: 8 de deslocamento/redução
Estado 210 conflitos: 54 de deslocamento/redução
Estado 211 conflitos: 54 de deslocamento/redução
Estado 220 conflitos: 4 de deslocamento/redução
Estado 227 conflitos: 54 de deslocamento/redução
Estado 238 conflitos: 1 de deslocamento/redução
Estado 277 conflitos: 27 de deslocamento/redução
Estado 290 conflitos: 54 de deslocamento/redução
Estado 296 conflitos: 54 de deslocamento/redução
Estado 297 conflitos: 54 de deslocamento/redução
Estado 298 conflitos: 54 de deslocamento/redução
Estado 304 conflitos: 54 de deslocamento/redução
Estado 305 conflitos: 54 de deslocamento/redução
Estado 318 conflitos: 1 de deslocamento/redução
Estado 319 conflitos: 28 de deslocamento/redução
Estado 384 conflitos: 54 de deslocamento/redução
Estado 387 conflitos: 8 de deslocamento/redução
Estado 388 conflitos: 8 de deslocamento/redução
Estado 389 conflitos: 8 de deslocamento/redução
Estado 390 conflitos: 8 de deslocamento/redução
Estado 391 conflitos: 8 de deslocamento/redução
Estado 393 conflitos: 8 de deslocamento/redução
Estado 394 conflitos: 8 de deslocamento/redução
Estado 395 conflitos: 8 de deslocamento/redução
Estado 396 conflitos: 8 de deslocamento/redução
Estado 397 conflitos: 8 de deslocamento/redução
Estado 398 conflitos: 8 de deslocamento/redução
Estado 399 conflitos: 8 de deslocamento/redução
Estado 400 conflitos: 8 de deslocamento/redução
Estado 401 conflitos: 8 de deslocamento/redução
Estado 402 conflitos: 8 de deslocamento/redução
Estado 403 conflitos: 8 de deslocamento/redução
Estado 404 conflitos: 8 de deslocamento/redução
Estado 405 conflitos: 8 de deslocamento/redução
Estado 406 conflitos: 26 de deslocamento/redução
Estado 407 conflitos: 26 de deslocamento/redução
Estado 408 conflitos: 26 de deslocamento/redução
Estado 409 conflitos: 26 de deslocamento/redução
Estado 411 conflitos: 4 de deslocamento/redução
Estado 414 conflitos: 8 de deslocamento/redução
Estado 415 conflitos: 8 de deslocamento/redução
Estado 416 conflitos: 8 de deslocamento/redução
Estado 417 conflitos: 8 de deslocamento/redução
Estado 418 conflitos: 8 de deslocamento/redução
Estado 419 conflitos: 8 de deslocamento/redução
Estado 420 conflitos: 8 de deslocamento/redução
Estado 421 conflitos: 8 de deslocamento/redução
Estado 422 conflitos: 8 de deslocamento/redução
Estado 423 conflitos: 8 de deslocamento/redução
Estado 424 conflitos: 8 de deslocamento/redução
Estado 429 conflitos: 54 de deslocamento/redução
Estado 437 conflitos: 54 de deslocamento/redução
Estado 494 conflitos: 4 de deslocamento/redução
Estado 511 conflitos: 54 de deslocamento/redução
Estado 513 conflitos: 1 de redução/redução
Estado 518 conflitos: 54 de deslocamento/redução
Estado 552 conflitos: 26 de deslocamento/redução
Estado 564 conflitos: 4 de deslocamento/redução
Estado 599 conflitos: 54 de deslocamento/redução
Estado 631 conflitos: 54 de deslocamento/redução
Estado 634 conflitos: 54 de deslocamento/redução
Estado 651 conflitos: 54 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: obj_decl_list END_OF_FILE

    2 obj_decl_list: obj_decl_list obj_decl
    3              | obj_decl
    4              | %empty

    5 scope: PRIVATE
    6      | PUBLIC
    7      | PROTECTED
    8      | INTERNAL
    9      | PROTECTED INTERNAL

   10 modifier_list: modifier_list modifier
   11              | modifier

   12 modifier: STATIC
   13         | CONST
   14         | OVERRIDE
   15         | VIRTUAL
   16         | READONLY
   17         | REF
   18         | OUT
   19         | NEW
   20         | ABSTRACT
   21         | EXTERN
   22         | PARAMS
   23         | EVENT
   24         | IMPLICIT
   25         | EXPLICIT
   26         | SEALED

   27 type: simple_type
   28     | nullable_type
   29     | matrix_type
   30     | identifier
   31     | OBJECT

   32 nullable_type: simple_type QMARK
   33              | identifier QMARK

   34 simple_type: BOOL_TYPE
   35            | numeric_type
   36            | STRING_TYPE

   37 numeric_type: integer_type
   38             | floating_type
   39             | DECIMAL_TYPE

   40 integer_type: SBYTE_TYPE
   41             | BYTE_TYPE
   42             | SHORT_TYPE
   43             | USHORT_TYPE
   44             | INT_TYPE
   45             | UINT_TYPE
   46             | LONG_TYPE
   47             | ULONG_TYPE
   48             | CHAR_TYPE

   49 floating_type: FLOAT_TYPE
   50              | DOUBLE_TYPE

   51 matrix_type: type START_BRCKT END_BRCKT
   52            | type START_BRCKT dimensions_def END_BRCKT
   53            | type START_BRCKT dimensions_undef END_BRCKT

   54 dimensions_def: dimensions_def COMMA numeric_val
   55               | numeric_val

   56 dimensions_undef: dimensions_undef COMMA
   57                 | %empty

   58 value: INT_VAL
   59      | TRUE_VAL
   60      | FALSE_VAL
   61      | BYTE_VAL
   62      | CHAR_VAL
   63      | LONG_VAL
   64      | UINT_VAL
   65      | FLOAT_VAL
   66      | SBYTE_VAL
   67      | SHORT_VAL
   68      | ULONG_VAL
   69      | STRING_VAL
   70      | USHORT_VAL
   71      | DECIMAL_VAL
   72      | DOUBLE_VAL
   73      | NULL_VALUE

   74 numeric_val: BYTE_VAL
   75            | CHAR_VAL
   76            | LONG_VAL
   77            | UINT_VAL
   78            | FLOAT_VAL
   79            | SBYTE_VAL
   80            | SHORT_VAL
   81            | ULONG_VAL
   82            | USHORT_VAL
   83            | DECIMAL_VAL

   84 identifier: IDENTIFIER

   85 obj_decl: class_decl
   86         | struct_decl
   87         | interface_decl
   88         | enum_decl

   89 class_father: COLON identifier
   90             | %empty

   91 class_decl: scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | CLASS identifier class_father START_CURLY statement_list END_CURLY

   96 struct_decl: scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | STRUCT identifier START_CURLY statement_list END_CURLY

  101 interface_decl: scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | INTERFACE identifier START_CURLY statement_list END_CURLY

  106 enum_decl: scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | ENUM identifier START_CURLY enum_list END_CURLY

  111 enum_list: enum_list COMMA identifier
  112          | enum_list COMMA identifier ASSIGN value
  113          | identifier
  114          | identifier ASSIGN value

  115 statement_list: statement_list statement
  116               | statement
  117               | %empty

  118 statement: obj_decl
  119          | method_decl_statement
  120          | operator_overloading
  121          | attr_decl_statement
  122          | var_decl_statement
  123          | if_else_statement
  124          | switch_statement
  125          | while_statement
  126          | do_while_statement
  127          | for_statement
  128          | foreach_statement
  129          | return_statement
  130          | checked_scope
  131          | unchecked_scope
  132          | label
  133          | go_to_statement
  134          | expression SEMI
  135          | SEMI

  136 method_decl_statement: VOID identifier START_PAR END_PAR method_body
  137                      | VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | type identifier START_PAR END_PAR method_body
  139                      | type identifier START_PAR parameter_list END_PAR method_body
  140                      | scope VOID identifier START_PAR END_PAR method_body
  141                      | scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | scope type identifier START_PAR END_PAR method_body
  143                      | scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | modifier_list scope type identifier START_PAR parameter_list END_PAR method_body

  154 parameter_list: parameter_list COMMA parameter
  155               | parameter

  156 method_body: START_CURLY statement_list END_CURLY
  157            | LAMBDA expression
  158            | SEMI

  159 parameter: type identifier
  160          | type identifier expression
  161          | modifier_list type identifier
  162          | modifier_list type identifier expression

  163 operator: INCREMENT
  164         | DECREMENT
  165         | ADD
  166         | SUB
  167         | MUL
  168         | DIV
  169         | MOD
  170         | RIGHT_SHIFT
  171         | LEFT_SHIFT
  172         | AND
  173         | OR
  174         | LESS_THEN
  175         | GREATER_THEN
  176         | LEQ
  177         | GEQ
  178         | EQ
  179         | NOT_EQ
  180         | BIT_AND
  181         | BIT_OR
  182         | DOUBLE_QMARK
  183         | BIT_XOR
  184         | QMARK

  185 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | type OPERATOR operator START_PAR END_PAR method_body
  188                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  201 return_statement: RETURN expression

  202 var_decl_statement: type id_list SEMI
  203                   | modifier type id_list SEMI

  204 attr_decl_statement: scope type id_list SEMI
  205                    | modifier_list scope type id_list SEMI
  206                    | scope modifier_list type id_list SEMI

  207 id_list: id_list COMMA identifier
  208        | id_list COMMA identifier ASSIGN expression
  209        | identifier
  210        | identifier ASSIGN expression

  211 if_else_statement: if_statement
  212                  | if_statement else_statement

  213 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | IF START_PAR expression END_PAR statement

  215 else_statement: ELSE START_CURLY statement_list END_CURLY
  216               | ELSE statement

  217 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  218 cases_list: cases_list CASE expression COLON statement_list
  219           | cases_list DEFAULT COLON statement_list
  220           | CASE expression COLON statement_list
  221           | DEFAULT COLON statement_list

  222 loop_body: START_CURLY statement_list END_CURLY
  223          | statement

  224 while_statement: WHILE START_PAR expression END_PAR loop_body

  225 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  226 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  227 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  228 checked_scope: CHECKED START_PAR expression END_PAR
  229              | CHECKED START_CURLY statement_list END_CURLY

  230 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  231                | UNCHECKED START_CURLY statement_list END_CURLY

  232 label: identifier COLON

  233 go_to_statement: GOTO identifier

  234 expression: value
  235           | START_PAR expression END_PAR
  236           | assignment_expressions
  237           | unary_operations
  238           | binary_operations
  239           | ternary_operations
  240           | method_invoking
  241           | attr_access
  242           | obj_instancing
  243           | matrix_indexing
  244           | matrix_instancing
  245           | CONTINUE
  246           | BREAK

  247 obj_instancing: NEW identifier START_PAR END_PAR
  248               | NEW identifier START_PAR argument_list END_PAR

  249 assignment_expressions: attr_access ASSIGN expression
  250                       | attr_access ADD_ASSIGN expression
  251                       | attr_access SUB_ASSIGN expression
  252                       | attr_access MUL_ASSIGN expression
  253                       | attr_access DIV_ASSIGN expression
  254                       | attr_access MOD_ASSIGN expression
  255                       | attr_access BIT_AND_ASSIGN expression
  256                       | attr_access BIT_OR_ASSIGN expression
  257                       | attr_access BIT_XOR_ASSIGN expression
  258                       | attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | attr_access LEFT_SHIFT_ASSIGN expression

  260 unary_operations: expression INCREMENT
  261                 | expression DECREMENT
  262                 | INCREMENT expression
  263                 | DECREMENT expression
  264                 | ADD expression
  265                 | SUB expression
  266                 | BIT_NOT expression
  267                 | NOT expression
  268                 | TYPEOF START_PAR expression END_PAR
  269                 | SIZEOF START_PAR expression END_PAR
  270                 | STACKALLOC START_PAR expression END_PAR

  271 binary_operations: expression ADD expression
  272                  | expression SUB expression
  273                  | expression MUL expression
  274                  | expression DIV expression
  275                  | expression MOD expression
  276                  | expression RIGHT_SHIFT expression
  277                  | expression LEFT_SHIFT expression
  278                  | expression AND expression
  279                  | expression OR expression
  280                  | expression LESS_THEN expression
  281                  | expression GREATER_THEN expression
  282                  | expression LEQ expression
  283                  | expression GEQ expression
  284                  | expression EQ expression
  285                  | expression NOT_EQ expression
  286                  | expression BIT_AND expression
  287                  | expression BIT_OR expression
  288                  | expression DOUBLE_QMARK expression
  289                  | expression BIT_XOR expression
  290                  | expression IS expression
  291                  | expression AS expression
  292                  | expression IN expression

  293 ternary_operations: expression QMARK expression COLON expression

  294 attr_access: identifier DOT attr_access
  295            | identifier
  296            | THIS DOT attr_access
  297            | BASE DOT attr_access

  298 method_invoking: attr_access START_PAR argument_list END_PAR

  299 argument_list: argument_list argument
  300              | argument
  301              | %empty

  302 argument: expression
  303         | modifier expression

  304 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  305 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
IDENTIFIER (258) 84
START_PAR (259) 136 137 138 139 140 141 142 143 144 145 146 147 148
    149 150 151 152 153 185 186 187 188 189 190 191 192 193 194 195
    196 197 198 199 200 213 214 217 224 225 226 227 228 230 235 247
    248 268 269 270 298
END_PAR (260) 136 137 138 139 140 141 142 143 144 145 146 147 148 149
    150 151 152 153 185 186 187 188 189 190 191 192 193 194 195 196
    197 198 199 200 213 214 217 224 225 226 227 228 230 235 247 248
    268 269 270 298
START_CURLY (261) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 156 213 215 217 222 229 231
END_CURLY (262) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 156 213 215 217 222 229 231
START_BRCKT (263) 51 52 53 304 305
END_BRCKT (264) 51 52 53 304 305
ADD (265) 165 264 271
SUB (266) 166 265 272
DIV (267) 168 274
MUL (268) 167 273
MOD (269) 169 275
NOT (270) 267
QMARK (271) 32 33 184 293
BIT_XOR (272) 183 289
COLON (273) 89 218 219 220 221 232 293
SEMI (274) 134 135 158 202 203 204 205 206 225 226
COMMA (275) 54 56 111 112 154 207 208
DOT (276) 294 296 297
ASSIGN (277) 112 114 208 210 249
LESS_THEN (278) 174 280
GREATER_THEN (279) 175 281
BIT_AND (280) 180 286
BIT_OR (281) 181 287
BIT_NOT (282) 266
EQ (283) 178 284
GEQ (284) 177 283
LEQ (285) 176 282
NOT_EQ (286) 179 285
ADD_ASSIGN (287) 250
SUB_ASSIGN (288) 251
MUL_ASSIGN (289) 252
DIV_ASSIGN (290) 253
MOD_ASSIGN (291) 254
BIT_AND_ASSIGN (292) 255
BIT_OR_ASSIGN (293) 256
BIT_XOR_ASSIGN (294) 257
LEFT_SHIFT (295) 171 277
RIGHT_SHIFT (296) 170 276
AND (297) 172 278
OR (298) 173 279
DOUBLE_QMARK (299) 182 288
INCREMENT (300) 163 260 262
DECREMENT (301) 164 261 263
LAMBDA (302) 157
LEFT_SHIFT_ASSIGN (303) 259
RIGHT_SHIFT_ASSIGN (304) 258
ABSTRACT (305) 20
AS (306) 291
BASE (307) 297
BOOL_TYPE (308) 34
BREAK (309) 246
BYTE_TYPE (310) 41
CASE (311) 218 220
CHAR_TYPE (312) 48
CHECKED (313) 228 229
CLASS (314) 91 92 93 94 95
CONST (315) 13
CONTINUE (316) 245
DECIMAL_TYPE (317) 39
DEFAULT (318) 219 221
DO (319) 225
DOUBLE_TYPE (320) 50
ELSE (321) 215 216
ENUM (322) 106 107 108 109 110
EVENT (323) 23
EXPLICIT (324) 25
EXTERN (325) 21
FALSE_VAL (326) 60
FLOAT_TYPE (327) 49
FOR (328) 226
FOREACH (329) 227
GOTO (330) 233
IF (331) 213 214
IMPLICIT (332) 24
IN (333) 292
INT_TYPE (334) 44
INTERFACE (335) 101 102 103 104 105
INTERNAL (336) 8 9
IS (337) 290
LONG_TYPE (338) 46
NEW (339) 19 247 248 305
NULL_VALUE (340) 73
OBJECT (341) 31
OPERATOR (342) 185 186 187 188 189 190 191 192 193 194 195 196 197
    198 199 200
OUT (343) 18
OVERRIDE (344) 14
PARAMS (345) 22
PRIVATE (346) 5
PROTECTED (347) 7 9
PUBLIC (348) 6
READONLY (349) 16
REF (350) 17
RETURN (351) 201
SBYTE_TYPE (352) 40
SEALED (353) 26
SHORT_TYPE (354) 42
SIZEOF (355) 269
STACKALLOC (356) 270
STATIC (357) 12
STRING_TYPE (358) 36
STRUCT (359) 96 97 98 99 100
SWITCH (360) 217
THIS (361) 296
TRUE_VAL (362) 59
TYPEOF (363) 268
UINT_TYPE (364) 45
ULONG_TYPE (365) 47
UNCHECKED (366) 230 231
USHORT_TYPE (367) 43
VIRTUAL (368) 15
VOID (369) 136 137 140 141 144 145 146 147 150 151 185 186 189 190
    193 194 197 198
WHILE (370) 224 225
INT_VAL (371) 58
UINT_VAL (372) 64 77
LONG_VAL (373) 63 76
ULONG_VAL (374) 68 81
FLOAT_VAL (375) 65 78
DOUBLE_VAL (376) 72
DECIMAL_VAL (377) 71 83
CHAR_VAL (378) 62 75
ENTER (379)
END_OF_FILE (380) 1
BYTE_VAL (381) 61 74
SBYTE_VAL (382) 66 79
SHORT_VAL (383) 67 80
USHORT_VAL (384) 70 82
STRING_VAL (385) 69
LOW (386)
TERNARY_IF (387)
INNER_PAR (388)
HIGH (389)
HIGHER (390)


Não terminais com as regras onde eles aparecem

$accept (136)
    à esquerda: 0
program (137)
    à esquerda: 1, à direita: 0
obj_decl_list (138)
    à esquerda: 2 3 4, à direita: 1 2
scope (139)
    à esquerda: 5 6 7 8 9, à direita: 91 93 94 96 98 99 101 103 104
    106 108 109 140 141 142 143 146 147 148 149 150 151 152 153 189
    190 191 192 193 194 195 196 197 198 199 200 204 205 206
modifier_list (140)
    à esquerda: 10 11, à direita: 10 92 93 94 97 98 99 102 103 104
    107 108 109 144 145 146 147 148 149 150 151 152 153 161 162 193
    194 195 196 197 198 199 200 205 206
modifier (141)
    à esquerda: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26, à direita:
    10 11 203 303
type (142)
    à esquerda: 27 28 29 30 31, à direita: 51 52 53 138 139 142 143
    148 149 152 153 159 160 161 162 187 188 191 192 195 196 199 200
    202 203 204 205 206 305
nullable_type (143)
    à esquerda: 32 33, à direita: 28
simple_type (144)
    à esquerda: 34 35 36, à direita: 27 32
numeric_type (145)
    à esquerda: 37 38 39, à direita: 35
integer_type (146)
    à esquerda: 40 41 42 43 44 45 46 47 48, à direita: 37
floating_type (147)
    à esquerda: 49 50, à direita: 38
matrix_type (148)
    à esquerda: 51 52 53, à direita: 29
dimensions_def (149)
    à esquerda: 54 55, à direita: 52 54 304 305
dimensions_undef (150)
    à esquerda: 56 57, à direita: 53 56
value (151)
    à esquerda: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73, à direita:
    112 114 234
numeric_val (152)
    à esquerda: 74 75 76 77 78 79 80 81 82 83, à direita: 54 55
identifier (153)
    à esquerda: 84, à direita: 30 33 89 91 92 93 94 95 96 97 98 99
    100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 136
    137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
    153 159 160 161 162 207 208 209 210 232 233 247 248 294 295
obj_decl (154)
    à esquerda: 85 86 87 88, à direita: 2 3 118
class_father (155)
    à esquerda: 89 90, à direita: 91 92 93 94 95
class_decl (156)
    à esquerda: 91 92 93 94 95, à direita: 85
struct_decl (157)
    à esquerda: 96 97 98 99 100, à direita: 86
interface_decl (158)
    à esquerda: 101 102 103 104 105, à direita: 87
enum_decl (159)
    à esquerda: 106 107 108 109 110, à direita: 88
enum_list (160)
    à esquerda: 111 112 113 114, à direita: 106 107 108 109 110 111
    112
statement_list (161)
    à esquerda: 115 116 117, à direita: 91 92 93 94 95 96 97 98 99
    100 101 102 103 104 105 115 156 213 215 218 219 220 221 222 229
    231
statement (162)
    à esquerda: 118 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 135, à direita: 115 116 214 216 223
method_decl_statement (163)
    à esquerda: 136 137 138 139 140 141 142 143 144 145 146 147 148
    149 150 151 152 153, à direita: 119
parameter_list (164)
    à esquerda: 154 155, à direita: 137 139 141 143 145 147 149 151
    153 154 186 188 190 192 194 196 198 200
method_body (165)
    à esquerda: 156 157 158, à direita: 136 137 138 139 140 141 142
    143 144 145 146 147 148 149 150 151 152 153 185 186 187 188 189
    190 191 192 193 194 195 196 197 198 199 200
parameter (166)
    à esquerda: 159 160 161 162, à direita: 154 155
operator (167)
    à esquerda: 163 164 165 166 167 168 169 170 171 172 173 174 175
    176 177 178 179 180 181 182 183 184, à direita: 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199 200
operator_overloading (168)
    à esquerda: 185 186 187 188 189 190 191 192 193 194 195 196 197
    198 199 200, à direita: 120
return_statement (169)
    à esquerda: 201, à direita: 129
var_decl_statement (170)
    à esquerda: 202 203, à direita: 122
attr_decl_statement (171)
    à esquerda: 204 205 206, à direita: 121
id_list (172)
    à esquerda: 207 208 209 210, à direita: 202 203 204 205 206 207
    208
if_else_statement (173)
    à esquerda: 211 212, à direita: 123
if_statement (174)
    à esquerda: 213 214, à direita: 211 212
else_statement (175)
    à esquerda: 215 216, à direita: 212
switch_statement (176)
    à esquerda: 217, à direita: 124
cases_list (177)
    à esquerda: 218 219 220 221, à direita: 217 218 219
loop_body (178)
    à esquerda: 222 223, à direita: 224 225 226 227
while_statement (179)
    à esquerda: 224, à direita: 125
do_while_statement (180)
    à esquerda: 225, à direita: 126
for_statement (181)
    à esquerda: 226, à direita: 127
foreach_statement (182)
    à esquerda: 227, à direita: 128
checked_scope (183)
    à esquerda: 228 229, à direita: 130
unchecked_scope (184)
    à esquerda: 230 231, à direita: 131
label (185)
    à esquerda: 232, à direita: 132
go_to_statement (186)
    à esquerda: 233, à direita: 133
expression (187)
    à esquerda: 234 235 236 237 238 239 240 241 242 243 244 245 246,
    à direita: 134 157 160 162 201 208 210 213 214 217 218 220 224
    225 226 227 228 230 235 249 250 251 252 253 254 255 256 257 258
    259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290
    291 292 293 302 303 304
obj_instancing (188)
    à esquerda: 247 248, à direita: 242
assignment_expressions (189)
    à esquerda: 249 250 251 252 253 254 255 256 257 258 259, à direita:
    236
unary_operations (190)
    à esquerda: 260 261 262 263 264 265 266 267 268 269 270, à direita:
    237
binary_operations (191)
    à esquerda: 271 272 273 274 275 276 277 278 279 280 281 282 283
    284 285 286 287 288 289 290 291 292, à direita: 238
ternary_operations (192)
    à esquerda: 293, à direita: 239
attr_access (193)
    à esquerda: 294 295 296 297, à direita: 241 249 250 251 252 253
    254 255 256 257 258 259 294 296 297 298
method_invoking (194)
    à esquerda: 298, à direita: 240
argument_list (195)
    à esquerda: 299 300 301, à direita: 248 298 299
argument (196)
    à esquerda: 302 303, à direita: 299 300
matrix_indexing (197)
    à esquerda: 304, à direita: 243
matrix_instancing (198)
    à esquerda: 305, à direita: 244


Estado 0

    0 $accept: . program $end
    1 program: . obj_decl_list END_OF_FILE
    2 obj_decl_list: . obj_decl_list obj_decl
    3              | . obj_decl
    4              | . %empty  [END_OF_FILE]
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 4
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 9
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 22
    VIRTUAL    deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 4 (obj_decl_list)

    program         ir ao estado 24
    obj_decl_list   ir ao estado 25
    scope           ir ao estado 26
    modifier_list   ir ao estado 27
    modifier        ir ao estado 28
    obj_decl        ir ao estado 29
    class_decl      ir ao estado 30
    struct_decl     ir ao estado 31
    interface_decl  ir ao estado 32
    enum_decl       ir ao estado 33

    Conflito entre regra 4 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 4 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 4 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 4 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 4 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 4 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 4 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 4 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 4 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 4 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 4 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 4 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 4 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 4 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 4 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 4 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 4 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 4 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 4 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 4 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 4 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 4 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 4 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 1

   20 modifier: ABSTRACT .

    $padrão  reduzir usando a regra 20 (modifier)


Estado 2

   84 identifier: . IDENTIFIER
   95 class_decl: CLASS . identifier class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 35


Estado 3

   13 modifier: CONST .

    $padrão  reduzir usando a regra 13 (modifier)


Estado 4

   84 identifier: . IDENTIFIER
  110 enum_decl: ENUM . identifier START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 36


Estado 5

   23 modifier: EVENT .

    $padrão  reduzir usando a regra 23 (modifier)


Estado 6

   25 modifier: EXPLICIT .

    $padrão  reduzir usando a regra 25 (modifier)


Estado 7

   21 modifier: EXTERN .

    $padrão  reduzir usando a regra 21 (modifier)


Estado 8

   24 modifier: IMPLICIT .

    $padrão  reduzir usando a regra 24 (modifier)


Estado 9

   84 identifier: . IDENTIFIER
  105 interface_decl: INTERFACE . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 37


Estado 10

    8 scope: INTERNAL .

    $padrão  reduzir usando a regra 8 (scope)


Estado 11

   19 modifier: NEW .

    $padrão  reduzir usando a regra 19 (modifier)


Estado 12

   18 modifier: OUT .

    $padrão  reduzir usando a regra 18 (modifier)


Estado 13

   14 modifier: OVERRIDE .

    $padrão  reduzir usando a regra 14 (modifier)


Estado 14

   22 modifier: PARAMS .

    $padrão  reduzir usando a regra 22 (modifier)


Estado 15

    5 scope: PRIVATE .

    $padrão  reduzir usando a regra 5 (scope)


Estado 16

    7 scope: PROTECTED .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, USHORT_TYPE, VIRTUAL, VOID]
    9      | PROTECTED . INTERNAL

    INTERNAL  deslocar, e ir ao estado 38

    $padrão  reduzir usando a regra 7 (scope)


Estado 17

    6 scope: PUBLIC .

    $padrão  reduzir usando a regra 6 (scope)


Estado 18

   16 modifier: READONLY .

    $padrão  reduzir usando a regra 16 (modifier)


Estado 19

   17 modifier: REF .

    $padrão  reduzir usando a regra 17 (modifier)


Estado 20

   26 modifier: SEALED .

    $padrão  reduzir usando a regra 26 (modifier)


Estado 21

   12 modifier: STATIC .

    $padrão  reduzir usando a regra 12 (modifier)


Estado 22

   84 identifier: . IDENTIFIER
  100 struct_decl: STRUCT . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 39


Estado 23

   15 modifier: VIRTUAL .

    $padrão  reduzir usando a regra 15 (modifier)


Estado 24

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 40


Estado 25

    1 program: obj_decl_list . END_OF_FILE
    2 obj_decl_list: obj_decl_list . obj_decl
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY

    ABSTRACT     deslocar, e ir ao estado 1
    CLASS        deslocar, e ir ao estado 2
    CONST        deslocar, e ir ao estado 3
    ENUM         deslocar, e ir ao estado 4
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    IMPLICIT     deslocar, e ir ao estado 8
    INTERFACE    deslocar, e ir ao estado 9
    INTERNAL     deslocar, e ir ao estado 10
    NEW          deslocar, e ir ao estado 11
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    PRIVATE      deslocar, e ir ao estado 15
    PROTECTED    deslocar, e ir ao estado 16
    PUBLIC       deslocar, e ir ao estado 17
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    STATIC       deslocar, e ir ao estado 21
    STRUCT       deslocar, e ir ao estado 22
    VIRTUAL      deslocar, e ir ao estado 23
    END_OF_FILE  deslocar, e ir ao estado 41

    scope           ir ao estado 26
    modifier_list   ir ao estado 27
    modifier        ir ao estado 28
    obj_decl        ir ao estado 42
    class_decl      ir ao estado 30
    struct_decl     ir ao estado 31
    interface_decl  ir ao estado 32
    enum_decl       ir ao estado 33


Estado 26

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   91 class_decl: scope . CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT identifier START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM identifier START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM identifier START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 43
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 44
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 45
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 46
    VIRTUAL    deslocar, e ir ao estado 23

    modifier_list  ir ao estado 47
    modifier       ir ao estado 28


Estado 27

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   92 class_decl: modifier_list . CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT identifier START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT identifier START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM identifier START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM identifier START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 48
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 49
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 50
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 51
    VIRTUAL    deslocar, e ir ao estado 23

    scope     ir ao estado 52
    modifier  ir ao estado 53


Estado 28

   11 modifier_list: modifier .

    $padrão  reduzir usando a regra 11 (modifier_list)


Estado 29

    3 obj_decl_list: obj_decl .

    $padrão  reduzir usando a regra 3 (obj_decl_list)


Estado 30

   85 obj_decl: class_decl .

    $padrão  reduzir usando a regra 85 (obj_decl)


Estado 31

   86 obj_decl: struct_decl .

    $padrão  reduzir usando a regra 86 (obj_decl)


Estado 32

   87 obj_decl: interface_decl .

    $padrão  reduzir usando a regra 87 (obj_decl)


Estado 33

   88 obj_decl: enum_decl .

    $padrão  reduzir usando a regra 88 (obj_decl)


Estado 34

   84 identifier: IDENTIFIER .

    $padrão  reduzir usando a regra 84 (identifier)


Estado 35

   89 class_father: . COLON identifier
   90             | . %empty  [START_CURLY]
   95 class_decl: CLASS identifier . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 55


Estado 36

  110 enum_decl: ENUM identifier . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 56


Estado 37

  105 interface_decl: INTERFACE identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 57


Estado 38

    9 scope: PROTECTED INTERNAL .

    $padrão  reduzir usando a regra 9 (scope)


Estado 39

  100 struct_decl: STRUCT identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 58


Estado 40

    0 $accept: program $end .

    $padrão  aceitar


Estado 41

    1 program: obj_decl_list END_OF_FILE .

    $padrão  reduzir usando a regra 1 (program)


Estado 42

    2 obj_decl_list: obj_decl_list obj_decl .

    $padrão  reduzir usando a regra 2 (obj_decl_list)


Estado 43

   84 identifier: . IDENTIFIER
   91 class_decl: scope CLASS . identifier class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 59


Estado 44

   84 identifier: . IDENTIFIER
  106 enum_decl: scope ENUM . identifier START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 60


Estado 45

   84 identifier: . IDENTIFIER
  101 interface_decl: scope INTERFACE . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 61


Estado 46

   84 identifier: . IDENTIFIER
   96 struct_decl: scope STRUCT . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 62


Estado 47

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   93 class_decl: scope modifier_list . CLASS identifier class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT identifier START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE identifier START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM identifier START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 63
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 64
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 65
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 66
    VIRTUAL    deslocar, e ir ao estado 23

    modifier  ir ao estado 53


Estado 48

   84 identifier: . IDENTIFIER
   92 class_decl: modifier_list CLASS . identifier class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 67


Estado 49

   84 identifier: . IDENTIFIER
  107 enum_decl: modifier_list ENUM . identifier START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 68


Estado 50

   84 identifier: . IDENTIFIER
  102 interface_decl: modifier_list INTERFACE . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 69


Estado 51

   84 identifier: . IDENTIFIER
   97 struct_decl: modifier_list STRUCT . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 70


Estado 52

   94 class_decl: modifier_list scope . CLASS identifier class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT identifier START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE identifier START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM identifier START_CURLY enum_list END_CURLY

    CLASS      deslocar, e ir ao estado 71
    ENUM       deslocar, e ir ao estado 72
    INTERFACE  deslocar, e ir ao estado 73
    STRUCT     deslocar, e ir ao estado 74


Estado 53

   10 modifier_list: modifier_list modifier .

    $padrão  reduzir usando a regra 10 (modifier_list)


Estado 54

   84 identifier: . IDENTIFIER
   89 class_father: COLON . identifier

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 75


Estado 55

   95 class_decl: CLASS identifier class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 76


Estado 56

   84 identifier: . IDENTIFIER
  110 enum_decl: ENUM identifier START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA identifier
  112          | . enum_list COMMA identifier ASSIGN value
  113          | . identifier
  114          | . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 77
    enum_list   ir ao estado 78


Estado 57

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | INTERFACE identifier START_CURLY . statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 150
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 58

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  100            | STRUCT identifier START_CURLY . statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 178
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 59

   89 class_father: . COLON identifier
   90             | . %empty  [START_CURLY]
   91 class_decl: scope CLASS identifier . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 179


Estado 60

  106 enum_decl: scope ENUM identifier . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 180


Estado 61

  101 interface_decl: scope INTERFACE identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 181


Estado 62

   96 struct_decl: scope STRUCT identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 182


Estado 63

   84 identifier: . IDENTIFIER
   93 class_decl: scope modifier_list CLASS . identifier class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 183


Estado 64

   84 identifier: . IDENTIFIER
  108 enum_decl: scope modifier_list ENUM . identifier START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 184


Estado 65

   84 identifier: . IDENTIFIER
  103 interface_decl: scope modifier_list INTERFACE . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 185


Estado 66

   84 identifier: . IDENTIFIER
   98 struct_decl: scope modifier_list STRUCT . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 186


Estado 67

   89 class_father: . COLON identifier
   90             | . %empty  [START_CURLY]
   92 class_decl: modifier_list CLASS identifier . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 187


Estado 68

  107 enum_decl: modifier_list ENUM identifier . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 188


Estado 69

  102 interface_decl: modifier_list INTERFACE identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 189


Estado 70

   97 struct_decl: modifier_list STRUCT identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 190


Estado 71

   84 identifier: . IDENTIFIER
   94 class_decl: modifier_list scope CLASS . identifier class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 191


Estado 72

   84 identifier: . IDENTIFIER
  109 enum_decl: modifier_list scope ENUM . identifier START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 192


Estado 73

   84 identifier: . IDENTIFIER
  104 interface_decl: modifier_list scope INTERFACE . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 193


Estado 74

   84 identifier: . IDENTIFIER
   99 struct_decl: modifier_list scope STRUCT . identifier START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 194


Estado 75

   89 class_father: COLON identifier .

    $padrão  reduzir usando a regra 89 (class_father)


Estado 76

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | CLASS identifier class_father START_CURLY . statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 195
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 77

  113 enum_list: identifier .  [END_CURLY, COMMA]
  114          | identifier . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 196

    $padrão  reduzir usando a regra 113 (enum_list)


Estado 78

  110 enum_decl: ENUM identifier START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA identifier
  112          | enum_list . COMMA identifier ASSIGN value

    END_CURLY  deslocar, e ir ao estado 197
    COMMA      deslocar, e ir ao estado 198


Estado 79

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  235           | START_PAR . expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 201
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 80

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  264                 | ADD . expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 202
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 81

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  265                 | SUB . expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 203
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 82

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  267                 | NOT . expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 204
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 83

  135 statement: SEMI .

    $padrão  reduzir usando a regra 135 (statement)


Estado 84

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  266                 | BIT_NOT . expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 205
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 85

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  262                 | INCREMENT . expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 206
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 86

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  263                 | DECREMENT . expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 207
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 87

  297 attr_access: BASE . DOT attr_access

    DOT  deslocar, e ir ao estado 208


Estado 88

   34 simple_type: BOOL_TYPE .

    $padrão  reduzir usando a regra 34 (simple_type)


Estado 89

  246 expression: BREAK .

    $padrão  reduzir usando a regra 246 (expression)


Estado 90

   41 integer_type: BYTE_TYPE .

    $padrão  reduzir usando a regra 41 (integer_type)


Estado 91

   48 integer_type: CHAR_TYPE .

    $padrão  reduzir usando a regra 48 (integer_type)


Estado 92

  228 checked_scope: CHECKED . START_PAR expression END_PAR
  229              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 209
    START_CURLY  deslocar, e ir ao estado 210


Estado 93

  245 expression: CONTINUE .

    $padrão  reduzir usando a regra 245 (expression)


Estado 94

   39 numeric_type: DECIMAL_TYPE .

    $padrão  reduzir usando a regra 39 (numeric_type)


Estado 95

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: . START_CURLY statement_list END_CURLY
  223          | . statement
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225                   | DO . loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 211
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 212
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    loop_body               ir ao estado 213
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 96

   50 floating_type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 50 (floating_type)


Estado 97

   60 value: FALSE_VAL .

    $padrão  reduzir usando a regra 60 (value)


Estado 98

   49 floating_type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 49 (floating_type)


Estado 99

  226 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 214


Estado 100

  227 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 215


Estado 101

   84 identifier: . IDENTIFIER
  233 go_to_statement: GOTO . identifier

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 216


Estado 102

  213 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | IF . START_PAR expression END_PAR statement

    START_PAR  deslocar, e ir ao estado 217


Estado 103

   44 integer_type: INT_TYPE .

    $padrão  reduzir usando a regra 44 (integer_type)


Estado 104

   46 integer_type: LONG_TYPE .

    $padrão  reduzir usando a regra 46 (integer_type)


Estado 105

   19 modifier: NEW .  [IDENTIFIER, START_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, USHORT_TYPE, VIRTUAL, VOID, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  247 obj_instancing: NEW . identifier START_PAR END_PAR
  248               | NEW . identifier START_PAR argument_list END_PAR
  305 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 98
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    OBJECT        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SHORT_TYPE    deslocar, e ir ao estado 110
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121

    IDENTIFIER    [reduzir usando a regra 19 (modifier)]
    BOOL_TYPE     [reduzir usando a regra 19 (modifier)]
    BYTE_TYPE     [reduzir usando a regra 19 (modifier)]
    CHAR_TYPE     [reduzir usando a regra 19 (modifier)]
    DECIMAL_TYPE  [reduzir usando a regra 19 (modifier)]
    DOUBLE_TYPE   [reduzir usando a regra 19 (modifier)]
    FLOAT_TYPE    [reduzir usando a regra 19 (modifier)]
    INT_TYPE      [reduzir usando a regra 19 (modifier)]
    LONG_TYPE     [reduzir usando a regra 19 (modifier)]
    OBJECT        [reduzir usando a regra 19 (modifier)]
    SBYTE_TYPE    [reduzir usando a regra 19 (modifier)]
    SHORT_TYPE    [reduzir usando a regra 19 (modifier)]
    STRING_TYPE   [reduzir usando a regra 19 (modifier)]
    UINT_TYPE     [reduzir usando a regra 19 (modifier)]
    ULONG_TYPE    [reduzir usando a regra 19 (modifier)]
    USHORT_TYPE   [reduzir usando a regra 19 (modifier)]
    $padrão      reduzir usando a regra 19 (modifier)

    type           ir ao estado 218
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 219


Estado 106

   73 value: NULL_VALUE .

    $padrão  reduzir usando a regra 73 (value)


Estado 107

   31 type: OBJECT .

    $padrão  reduzir usando a regra 31 (type)


Estado 108

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  201 return_statement: RETURN . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 220
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 109

   40 integer_type: SBYTE_TYPE .

    $padrão  reduzir usando a regra 40 (integer_type)


Estado 110

   42 integer_type: SHORT_TYPE .

    $padrão  reduzir usando a regra 42 (integer_type)


Estado 111

  269 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 221


Estado 112

  270 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 222


Estado 113

   36 simple_type: STRING_TYPE .

    $padrão  reduzir usando a regra 36 (simple_type)


Estado 114

  217 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  deslocar, e ir ao estado 223


Estado 115

  296 attr_access: THIS . DOT attr_access

    DOT  deslocar, e ir ao estado 224


Estado 116

   59 value: TRUE_VAL .

    $padrão  reduzir usando a regra 59 (value)


Estado 117

  268 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 225


Estado 118

   45 integer_type: UINT_TYPE .

    $padrão  reduzir usando a regra 45 (integer_type)


Estado 119

   47 integer_type: ULONG_TYPE .

    $padrão  reduzir usando a regra 47 (integer_type)


Estado 120

  230 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  231                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 226
    START_CURLY  deslocar, e ir ao estado 227


Estado 121

   43 integer_type: USHORT_TYPE .

    $padrão  reduzir usando a regra 43 (integer_type)


Estado 122

   84 identifier: . IDENTIFIER
  136 method_decl_statement: VOID . identifier START_PAR END_PAR method_body
  137                      | VOID . identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  186                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 34
    OPERATOR    deslocar, e ir ao estado 228

    identifier  ir ao estado 229


Estado 123

  224 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 230


Estado 124

   58 value: INT_VAL .

    $padrão  reduzir usando a regra 58 (value)


Estado 125

   64 value: UINT_VAL .

    $padrão  reduzir usando a regra 64 (value)


Estado 126

   63 value: LONG_VAL .

    $padrão  reduzir usando a regra 63 (value)


Estado 127

   68 value: ULONG_VAL .

    $padrão  reduzir usando a regra 68 (value)


Estado 128

   65 value: FLOAT_VAL .

    $padrão  reduzir usando a regra 65 (value)


Estado 129

   72 value: DOUBLE_VAL .

    $padrão  reduzir usando a regra 72 (value)


Estado 130

   71 value: DECIMAL_VAL .

    $padrão  reduzir usando a regra 71 (value)


Estado 131

   62 value: CHAR_VAL .

    $padrão  reduzir usando a regra 62 (value)


Estado 132

   61 value: BYTE_VAL .

    $padrão  reduzir usando a regra 61 (value)


Estado 133

   66 value: SBYTE_VAL .

    $padrão  reduzir usando a regra 66 (value)


Estado 134

   67 value: SHORT_VAL .

    $padrão  reduzir usando a regra 67 (value)


Estado 135

   70 value: USHORT_VAL .

    $padrão  reduzir usando a regra 70 (value)


Estado 136

   69 value: STRING_VAL .

    $padrão  reduzir usando a regra 69 (value)


Estado 137

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
   91 class_decl: scope . CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT identifier START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM identifier START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  140 method_decl_statement: scope . VOID identifier START_PAR END_PAR method_body
  141                      | scope . VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | scope . type identifier START_PAR END_PAR method_body
  143                      | scope . type identifier START_PAR parameter_list END_PAR method_body
  146                      | scope . modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | scope . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | scope . modifier_list type identifier START_PAR END_PAR method_body
  149                      | scope . modifier_list type identifier START_PAR parameter_list END_PAR method_body
  189 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  192                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 attr_decl_statement: scope . type id_list SEMI
  206                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 34
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 43
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 44
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 45
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 46
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 231

    modifier_list  ir ao estado 232
    modifier       ir ao estado 28
    type           ir ao estado 233
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234


Estado 138

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   92 class_decl: modifier_list . CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT identifier START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT identifier START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM identifier START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM identifier START_CURLY enum_list END_CURLY
  144 method_decl_statement: modifier_list . VOID identifier START_PAR END_PAR method_body
  145                      | modifier_list . VOID identifier START_PAR parameter_list END_PAR method_body
  150                      | modifier_list . scope VOID identifier START_PAR END_PAR method_body
  151                      | modifier_list . scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | modifier_list . scope type identifier START_PAR END_PAR method_body
  153                      | modifier_list . scope type identifier START_PAR parameter_list END_PAR method_body
  197 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 48
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 49
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 50
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 51
    VIRTUAL    deslocar, e ir ao estado 23
    VOID       deslocar, e ir ao estado 235

    scope     ir ao estado 236
    modifier  ir ao estado 53


Estado 139

   11 modifier_list: modifier .  [ABSTRACT, CLASS, CONST, ENUM, EVENT, EXPLICIT, EXTERN, IMPLICIT, INTERFACE, INTERNAL, NEW, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SEALED, STATIC, STRUCT, VIRTUAL, VOID]
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  203 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 34
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 98
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    OBJECT        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SHORT_TYPE    deslocar, e ir ao estado 110
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121

    $padrão  reduzir usando a regra 11 (modifier_list)

    type           ir ao estado 237
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234


Estado 140

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  138 method_decl_statement: type . identifier START_PAR END_PAR method_body
  139                      | type . identifier START_PAR parameter_list END_PAR method_body
  187 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  188                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  202 var_decl_statement: type . id_list SEMI
  207 id_list: . id_list COMMA identifier
  208        | . id_list COMMA identifier ASSIGN expression
  209        | . identifier
  210        | . identifier ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238
    OPERATOR     deslocar, e ir ao estado 239

    identifier  ir ao estado 240
    id_list     ir ao estado 241


Estado 141

   28 type: nullable_type .

    $padrão  reduzir usando a regra 28 (type)


Estado 142

   27 type: simple_type .  [IDENTIFIER, START_BRCKT, OPERATOR]
   32 nullable_type: simple_type . QMARK

    QMARK  deslocar, e ir ao estado 242

    $padrão  reduzir usando a regra 27 (type)


Estado 143

   35 simple_type: numeric_type .

    $padrão  reduzir usando a regra 35 (simple_type)


Estado 144

   37 numeric_type: integer_type .

    $padrão  reduzir usando a regra 37 (numeric_type)


Estado 145

   38 numeric_type: floating_type .

    $padrão  reduzir usando a regra 38 (numeric_type)


Estado 146

   29 type: matrix_type .

    $padrão  reduzir usando a regra 29 (type)


Estado 147

  234 expression: value .

    $padrão  reduzir usando a regra 234 (expression)


Estado 148

   30 type: identifier .  [IDENTIFIER, START_BRCKT, OPERATOR]
   33 nullable_type: identifier . QMARK
  232 label: identifier . COLON
  294 attr_access: identifier . DOT attr_access
  295            | identifier .  [START_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, AS, IN, IS]

    QMARK  deslocar, e ir ao estado 243
    COLON  deslocar, e ir ao estado 244
    DOT    deslocar, e ir ao estado 245

    IDENTIFIER   reduzir usando a regra 30 (type)
    START_BRCKT  reduzir usando a regra 30 (type)
    START_BRCKT  [reduzir usando a regra 295 (attr_access)]
    QMARK        [reduzir usando a regra 295 (attr_access)]
    OPERATOR     reduzir usando a regra 30 (type)
    $padrão     reduzir usando a regra 295 (attr_access)


Estado 149

  118 statement: obj_decl .

    $padrão  reduzir usando a regra 118 (statement)


Estado 150

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | INTERFACE identifier START_CURLY statement_list . END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 246
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 151

  116 statement_list: statement .

    $padrão  reduzir usando a regra 116 (statement_list)


Estado 152

  119 statement: method_decl_statement .

    $padrão  reduzir usando a regra 119 (statement)


Estado 153

  120 statement: operator_overloading .

    $padrão  reduzir usando a regra 120 (statement)


Estado 154

  129 statement: return_statement .

    $padrão  reduzir usando a regra 129 (statement)


Estado 155

  122 statement: var_decl_statement .

    $padrão  reduzir usando a regra 122 (statement)


Estado 156

  121 statement: attr_decl_statement .

    $padrão  reduzir usando a regra 121 (statement)


Estado 157

  123 statement: if_else_statement .

    $padrão  reduzir usando a regra 123 (statement)


Estado 158

  211 if_else_statement: if_statement .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  212                  | if_statement . else_statement
  215 else_statement: . ELSE START_CURLY statement_list END_CURLY
  216               | . ELSE statement

    ELSE  deslocar, e ir ao estado 248

    $padrão  reduzir usando a regra 211 (if_else_statement)

    else_statement  ir ao estado 249

    Conflito entre regra 211 e token ELSE resolvido como shift. (LOW < ELSE).


Estado 159

  124 statement: switch_statement .

    $padrão  reduzir usando a regra 124 (statement)


Estado 160

  125 statement: while_statement .

    $padrão  reduzir usando a regra 125 (statement)


Estado 161

  126 statement: do_while_statement .

    $padrão  reduzir usando a regra 126 (statement)


Estado 162

  127 statement: for_statement .

    $padrão  reduzir usando a regra 127 (statement)


Estado 163

  128 statement: foreach_statement .

    $padrão  reduzir usando a regra 128 (statement)


Estado 164

  130 statement: checked_scope .

    $padrão  reduzir usando a regra 130 (statement)


Estado 165

  131 statement: unchecked_scope .

    $padrão  reduzir usando a regra 131 (statement)


Estado 166

  132 statement: label .

    $padrão  reduzir usando a regra 132 (statement)


Estado 167

  133 statement: go_to_statement .

    $padrão  reduzir usando a regra 133 (statement)


Estado 168

  134 statement: expression . SEMI
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    SEMI          deslocar, e ir ao estado 258
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 169

  242 expression: obj_instancing .

    $padrão  reduzir usando a regra 242 (expression)


Estado 170

  236 expression: assignment_expressions .

    $padrão  reduzir usando a regra 236 (expression)


Estado 171

  237 expression: unary_operations .

    $padrão  reduzir usando a regra 237 (expression)


Estado 172

  238 expression: binary_operations .

    $padrão  reduzir usando a regra 238 (expression)


Estado 173

  239 expression: ternary_operations .

    $padrão  reduzir usando a regra 239 (expression)


Estado 174

  241 expression: attr_access .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  249 assignment_expressions: attr_access . ASSIGN expression
  250                       | attr_access . ADD_ASSIGN expression
  251                       | attr_access . SUB_ASSIGN expression
  252                       | attr_access . MUL_ASSIGN expression
  253                       | attr_access . DIV_ASSIGN expression
  254                       | attr_access . MOD_ASSIGN expression
  255                       | attr_access . BIT_AND_ASSIGN expression
  256                       | attr_access . BIT_OR_ASSIGN expression
  257                       | attr_access . BIT_XOR_ASSIGN expression
  258                       | attr_access . RIGHT_SHIFT_ASSIGN expression
  259                       | attr_access . LEFT_SHIFT_ASSIGN expression
  298 method_invoking: attr_access . START_PAR argument_list END_PAR

    START_PAR           deslocar, e ir ao estado 277
    ASSIGN              deslocar, e ir ao estado 278
    ADD_ASSIGN          deslocar, e ir ao estado 279
    SUB_ASSIGN          deslocar, e ir ao estado 280
    MUL_ASSIGN          deslocar, e ir ao estado 281
    DIV_ASSIGN          deslocar, e ir ao estado 282
    MOD_ASSIGN          deslocar, e ir ao estado 283
    BIT_AND_ASSIGN      deslocar, e ir ao estado 284
    BIT_OR_ASSIGN       deslocar, e ir ao estado 285
    BIT_XOR_ASSIGN      deslocar, e ir ao estado 286
    LEFT_SHIFT_ASSIGN   deslocar, e ir ao estado 287
    RIGHT_SHIFT_ASSIGN  deslocar, e ir ao estado 288

    START_PAR  [reduzir usando a regra 241 (expression)]
    $padrão   reduzir usando a regra 241 (expression)


Estado 175

  240 expression: method_invoking .

    $padrão  reduzir usando a regra 240 (expression)


Estado 176

  243 expression: matrix_indexing .

    $padrão  reduzir usando a regra 243 (expression)


Estado 177

  244 expression: matrix_instancing .

    $padrão  reduzir usando a regra 244 (expression)


Estado 178

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  100            | STRUCT identifier START_CURLY statement_list . END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 289
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 179

   91 class_decl: scope CLASS identifier class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 290


Estado 180

   84 identifier: . IDENTIFIER
  106 enum_decl: scope ENUM identifier START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA identifier
  112          | . enum_list COMMA identifier ASSIGN value
  113          | . identifier
  114          | . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 77
    enum_list   ir ao estado 291


Estado 181

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  101               | scope INTERFACE identifier START_CURLY . statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 292
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 182

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   96            | scope STRUCT identifier START_CURLY . statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 293
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 183

   89 class_father: . COLON identifier
   90             | . %empty  [START_CURLY]
   93 class_decl: scope modifier_list CLASS identifier . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 294


Estado 184

  108 enum_decl: scope modifier_list ENUM identifier . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 295


Estado 185

  103 interface_decl: scope modifier_list INTERFACE identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 296


Estado 186

   98 struct_decl: scope modifier_list STRUCT identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 297


Estado 187

   92 class_decl: modifier_list CLASS identifier class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 298


Estado 188

   84 identifier: . IDENTIFIER
  107 enum_decl: modifier_list ENUM identifier START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA identifier
  112          | . enum_list COMMA identifier ASSIGN value
  113          | . identifier
  114          | . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 77
    enum_list   ir ao estado 299


Estado 189

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE identifier START_CURLY . statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 300
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 190

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT identifier START_CURLY . statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 301
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 191

   89 class_father: . COLON identifier
   90             | . %empty  [START_CURLY]
   94 class_decl: modifier_list scope CLASS identifier . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 302


Estado 192

  109 enum_decl: modifier_list scope ENUM identifier . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 303


Estado 193

  104 interface_decl: modifier_list scope INTERFACE identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 304


Estado 194

   99 struct_decl: modifier_list scope STRUCT identifier . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 305


Estado 195

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | CLASS identifier class_father START_CURLY statement_list . END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 306
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 196

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  114 enum_list: identifier ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 97
    NULL_VALUE   deslocar, e ir ao estado 106
    TRUE_VAL     deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value  ir ao estado 307


Estado 197

  110 enum_decl: ENUM identifier START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 110 (enum_decl)


Estado 198

   84 identifier: . IDENTIFIER
  111 enum_list: enum_list COMMA . identifier
  112          | enum_list COMMA . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 308


Estado 199

   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  247 obj_instancing: NEW . identifier START_PAR END_PAR
  248               | NEW . identifier START_PAR argument_list END_PAR
  305 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 98
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    OBJECT        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SHORT_TYPE    deslocar, e ir ao estado 110
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121

    type           ir ao estado 218
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 219


Estado 200

  294 attr_access: identifier . DOT attr_access
  295            | identifier .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    DOT  deslocar, e ir ao estado 245

    $padrão  reduzir usando a regra 295 (attr_access)


Estado 201

  235 expression: START_PAR expression . END_PAR
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 309
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 202

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  264                 | ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 264 (unary_operations)]
    QMARK         [reduzir usando a regra 264 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 264 (unary_operations)]
    INCREMENT     [reduzir usando a regra 264 (unary_operations)]
    DECREMENT     [reduzir usando a regra 264 (unary_operations)]
    AS            [reduzir usando a regra 264 (unary_operations)]
    IN            [reduzir usando a regra 264 (unary_operations)]
    IS            [reduzir usando a regra 264 (unary_operations)]
    $padrão      reduzir usando a regra 264 (unary_operations)

    Conflito entre regra 264 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 264 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 264 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 264 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 264 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 264 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 264 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 264 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 264 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 264 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 264 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 264 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 264 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 264 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 264 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 264 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 264 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 264 e token OR resolvido como reduce. (OR < HIGH).


Estado 203

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  265                 | SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 265 (unary_operations)]
    QMARK         [reduzir usando a regra 265 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 265 (unary_operations)]
    INCREMENT     [reduzir usando a regra 265 (unary_operations)]
    DECREMENT     [reduzir usando a regra 265 (unary_operations)]
    AS            [reduzir usando a regra 265 (unary_operations)]
    IN            [reduzir usando a regra 265 (unary_operations)]
    IS            [reduzir usando a regra 265 (unary_operations)]
    $padrão      reduzir usando a regra 265 (unary_operations)

    Conflito entre regra 265 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 265 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 265 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 265 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 265 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 265 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 265 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 265 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 265 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 265 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 265 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 265 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 265 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 265 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 265 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 265 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 265 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 265 e token OR resolvido como reduce. (OR < HIGH).


Estado 204

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  267                 | NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 267 (unary_operations)]
    QMARK         [reduzir usando a regra 267 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 267 (unary_operations)]
    INCREMENT     [reduzir usando a regra 267 (unary_operations)]
    DECREMENT     [reduzir usando a regra 267 (unary_operations)]
    AS            [reduzir usando a regra 267 (unary_operations)]
    IN            [reduzir usando a regra 267 (unary_operations)]
    IS            [reduzir usando a regra 267 (unary_operations)]
    $padrão      reduzir usando a regra 267 (unary_operations)

    Conflito entre regra 267 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 267 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 267 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 267 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 267 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 267 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 267 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 267 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 267 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 267 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 267 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 267 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 267 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 267 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 267 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 267 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 267 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 267 e token OR resolvido como reduce. (OR < HIGH).


Estado 205

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  266                 | BIT_NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 266 (unary_operations)]
    QMARK         [reduzir usando a regra 266 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 266 (unary_operations)]
    INCREMENT     [reduzir usando a regra 266 (unary_operations)]
    DECREMENT     [reduzir usando a regra 266 (unary_operations)]
    AS            [reduzir usando a regra 266 (unary_operations)]
    IN            [reduzir usando a regra 266 (unary_operations)]
    IS            [reduzir usando a regra 266 (unary_operations)]
    $padrão      reduzir usando a regra 266 (unary_operations)

    Conflito entre regra 266 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 266 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 266 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 266 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 266 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 266 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 266 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 266 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 266 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 266 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 266 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 266 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 266 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 266 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 266 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 266 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 266 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 266 e token OR resolvido como reduce. (OR < HIGH).


Estado 206

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  262                 | INCREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 262 (unary_operations)]
    QMARK         [reduzir usando a regra 262 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 262 (unary_operations)]
    INCREMENT     [reduzir usando a regra 262 (unary_operations)]
    DECREMENT     [reduzir usando a regra 262 (unary_operations)]
    AS            [reduzir usando a regra 262 (unary_operations)]
    IN            [reduzir usando a regra 262 (unary_operations)]
    IS            [reduzir usando a regra 262 (unary_operations)]
    $padrão      reduzir usando a regra 262 (unary_operations)

    Conflito entre regra 262 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 262 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 262 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 262 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 262 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 262 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 262 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 262 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 262 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 262 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 262 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 262 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 262 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 262 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 262 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 262 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 262 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 262 e token OR resolvido como reduce. (OR < HIGH).


Estado 207

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  263                 | DECREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 263 (unary_operations)]
    QMARK         [reduzir usando a regra 263 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 263 (unary_operations)]
    INCREMENT     [reduzir usando a regra 263 (unary_operations)]
    DECREMENT     [reduzir usando a regra 263 (unary_operations)]
    AS            [reduzir usando a regra 263 (unary_operations)]
    IN            [reduzir usando a regra 263 (unary_operations)]
    IS            [reduzir usando a regra 263 (unary_operations)]
    $padrão      reduzir usando a regra 263 (unary_operations)

    Conflito entre regra 263 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 263 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 263 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 263 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 263 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 263 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 263 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 263 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 263 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 263 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 263 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 263 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 263 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 263 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 263 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 263 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 263 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 263 e token OR resolvido como reduce. (OR < HIGH).


Estado 208

   84 identifier: . IDENTIFIER
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  297            | BASE DOT . attr_access

    IDENTIFIER  deslocar, e ir ao estado 34
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 115

    identifier   ir ao estado 200
    attr_access  ir ao estado 310


Estado 209

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  228 checked_scope: CHECKED START_PAR . expression END_PAR
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 311
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 210

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  229              | CHECKED START_CURLY . statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 312
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 211

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: START_CURLY . statement_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 313
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 212

  223 loop_body: statement .

    $padrão  reduzir usando a regra 223 (loop_body)


Estado 213

  225 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  deslocar, e ir ao estado 314


Estado 214

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  226 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 315
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 215

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  227 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 316
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 216

  233 go_to_statement: GOTO identifier .

    $padrão  reduzir usando a regra 233 (go_to_statement)


Estado 217

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  213 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  214             | IF START_PAR . expression END_PAR statement
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 317
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 218

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  305 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  deslocar, e ir ao estado 318


Estado 219

   30 type: identifier .  [START_BRCKT]
   33 nullable_type: identifier . QMARK
  247 obj_instancing: NEW identifier . START_PAR END_PAR
  248               | NEW identifier . START_PAR argument_list END_PAR

    START_PAR  deslocar, e ir ao estado 319
    QMARK      deslocar, e ir ao estado 243

    $padrão  reduzir usando a regra 30 (type)


Estado 220

  201 return_statement: RETURN expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    ADD        [reduzir usando a regra 201 (return_statement)]
    SUB        [reduzir usando a regra 201 (return_statement)]
    INCREMENT  [reduzir usando a regra 201 (return_statement)]
    DECREMENT  [reduzir usando a regra 201 (return_statement)]
    $padrão   reduzir usando a regra 201 (return_statement)


Estado 221

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  269                 | SIZEOF START_PAR . expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 320
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 222

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  270                 | STACKALLOC START_PAR . expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 321
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 223

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  217 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 322
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 224

   84 identifier: . IDENTIFIER
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  296            | THIS DOT . attr_access
  297            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 34
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 115

    identifier   ir ao estado 200
    attr_access  ir ao estado 323


Estado 225

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  268                 | TYPEOF START_PAR . expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 324
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 226

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  230 unchecked_scope: UNCHECKED START_PAR . expression END_PAR
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 325
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 227

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  231                | UNCHECKED START_CURLY . statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 326
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 228

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  185 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  186                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 349


Estado 229

  136 method_decl_statement: VOID identifier . START_PAR END_PAR method_body
  137                      | VOID identifier . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 350


Estado 230

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  224 while_statement: WHILE START_PAR . expression END_PAR loop_body
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 351
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 231

   84 identifier: . IDENTIFIER
  140 method_decl_statement: scope VOID . identifier START_PAR END_PAR method_body
  141                      | scope VOID . identifier START_PAR parameter_list END_PAR method_body
  189 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  190                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 34
    OPERATOR    deslocar, e ir ao estado 352

    identifier  ir ao estado 353


Estado 232

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
   93 class_decl: scope modifier_list . CLASS identifier class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT identifier START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE identifier START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM identifier START_CURLY enum_list END_CURLY
  146 method_decl_statement: scope modifier_list . VOID identifier START_PAR END_PAR method_body
  147                      | scope modifier_list . VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | scope modifier_list . type identifier START_PAR END_PAR method_body
  149                      | scope modifier_list . type identifier START_PAR parameter_list END_PAR method_body
  193 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 34
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 63
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 64
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 65
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 66
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 354

    modifier       ir ao estado 53
    type           ir ao estado 355
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234


Estado 233

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  142 method_decl_statement: scope type . identifier START_PAR END_PAR method_body
  143                      | scope type . identifier START_PAR parameter_list END_PAR method_body
  191 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  192                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 attr_decl_statement: scope type . id_list SEMI
  207 id_list: . id_list COMMA identifier
  208        | . id_list COMMA identifier ASSIGN expression
  209        | . identifier
  210        | . identifier ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238
    OPERATOR     deslocar, e ir ao estado 356

    identifier  ir ao estado 357
    id_list     ir ao estado 358


Estado 234

   30 type: identifier .  [IDENTIFIER, START_BRCKT, OPERATOR]
   33 nullable_type: identifier . QMARK

    QMARK  deslocar, e ir ao estado 243

    $padrão  reduzir usando a regra 30 (type)


Estado 235

   84 identifier: . IDENTIFIER
  144 method_decl_statement: modifier_list VOID . identifier START_PAR END_PAR method_body
  145                      | modifier_list VOID . identifier START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 359


Estado 236

   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
   94 class_decl: modifier_list scope . CLASS identifier class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT identifier START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE identifier START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM identifier START_CURLY enum_list END_CURLY
  150 method_decl_statement: modifier_list scope . VOID identifier START_PAR END_PAR method_body
  151                      | modifier_list scope . VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | modifier_list scope . type identifier START_PAR END_PAR method_body
  153                      | modifier_list scope . type identifier START_PAR parameter_list END_PAR method_body
  197 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 34
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 71
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 72
    FLOAT_TYPE    deslocar, e ir ao estado 98
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 73
    LONG_TYPE     deslocar, e ir ao estado 104
    OBJECT        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SHORT_TYPE    deslocar, e ir ao estado 110
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 74
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VOID          deslocar, e ir ao estado 360

    type           ir ao estado 361
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234


Estado 237

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  203 var_decl_statement: modifier type . id_list SEMI
  207 id_list: . id_list COMMA identifier
  208        | . id_list COMMA identifier ASSIGN expression
  209        | . identifier
  210        | . identifier ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238

    identifier  ir ao estado 362
    id_list     ir ao estado 363


Estado 238

   51 matrix_type: type START_BRCKT . END_BRCKT
   52            | type START_BRCKT . dimensions_def END_BRCKT
   53            | type START_BRCKT . dimensions_undef END_BRCKT
   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   56 dimensions_undef: . dimensions_undef COMMA
   57                 | . %empty  [END_BRCKT, COMMA]
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL

    END_BRCKT    deslocar, e ir ao estado 364
    UINT_VAL     deslocar, e ir ao estado 365
    LONG_VAL     deslocar, e ir ao estado 366
    ULONG_VAL    deslocar, e ir ao estado 367
    FLOAT_VAL    deslocar, e ir ao estado 368
    DECIMAL_VAL  deslocar, e ir ao estado 369
    CHAR_VAL     deslocar, e ir ao estado 370
    BYTE_VAL     deslocar, e ir ao estado 371
    SBYTE_VAL    deslocar, e ir ao estado 372
    SHORT_VAL    deslocar, e ir ao estado 373
    USHORT_VAL   deslocar, e ir ao estado 374

    END_BRCKT  [reduzir usando a regra 57 (dimensions_undef)]
    $padrão   reduzir usando a regra 57 (dimensions_undef)

    dimensions_def    ir ao estado 375
    dimensions_undef  ir ao estado 376
    numeric_val       ir ao estado 377


Estado 239

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  187 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  188                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 378


Estado 240

  138 method_decl_statement: type identifier . START_PAR END_PAR method_body
  139                      | type identifier . START_PAR parameter_list END_PAR method_body
  209 id_list: identifier .  [SEMI, COMMA]
  210        | identifier . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 379
    ASSIGN     deslocar, e ir ao estado 380

    $padrão  reduzir usando a regra 209 (id_list)


Estado 241

  202 var_decl_statement: type id_list . SEMI
  207 id_list: id_list . COMMA identifier
  208        | id_list . COMMA identifier ASSIGN expression

    SEMI   deslocar, e ir ao estado 381
    COMMA  deslocar, e ir ao estado 382


Estado 242

   32 nullable_type: simple_type QMARK .

    $padrão  reduzir usando a regra 32 (nullable_type)


Estado 243

   33 nullable_type: identifier QMARK .

    $padrão  reduzir usando a regra 33 (nullable_type)


Estado 244

  232 label: identifier COLON .

    $padrão  reduzir usando a regra 232 (label)


Estado 245

   84 identifier: . IDENTIFIER
  294 attr_access: . identifier DOT attr_access
  294            | identifier DOT . attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 34
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 115

    identifier   ir ao estado 200
    attr_access  ir ao estado 383


Estado 246

  105 interface_decl: INTERFACE identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 105 (interface_decl)


Estado 247

  115 statement_list: statement_list statement .

    $padrão  reduzir usando a regra 115 (statement_list)


Estado 248

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  215 else_statement: ELSE . START_CURLY statement_list END_CURLY
  216               | ELSE . statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 384
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 385
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 249

  212 if_else_statement: if_statement else_statement .

    $padrão  reduzir usando a regra 212 (if_else_statement)


Estado 250

   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL
  304 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     deslocar, e ir ao estado 365
    LONG_VAL     deslocar, e ir ao estado 366
    ULONG_VAL    deslocar, e ir ao estado 367
    FLOAT_VAL    deslocar, e ir ao estado 368
    DECIMAL_VAL  deslocar, e ir ao estado 369
    CHAR_VAL     deslocar, e ir ao estado 370
    BYTE_VAL     deslocar, e ir ao estado 371
    SBYTE_VAL    deslocar, e ir ao estado 372
    SHORT_VAL    deslocar, e ir ao estado 373
    USHORT_VAL   deslocar, e ir ao estado 374

    dimensions_def  ir ao estado 386
    numeric_val     ir ao estado 377


Estado 251

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  271                  | expression ADD . expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 387
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 252

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  272                  | expression SUB . expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 388
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 253

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  274                  | expression DIV . expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 389
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 254

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  273                  | expression MUL . expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 390
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 255

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  275                  | expression MOD . expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 391
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 256

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  293                   | expression QMARK . expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 392
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 257

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  289                  | expression BIT_XOR . expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 393
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 258

  134 statement: expression SEMI .

    $padrão  reduzir usando a regra 134 (statement)


Estado 259

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  280                  | expression LESS_THEN . expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 394
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 260

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  281                  | expression GREATER_THEN . expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 395
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 261

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  286                  | expression BIT_AND . expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 396
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 262

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  287                  | expression BIT_OR . expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 397
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 263

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  284                  | expression EQ . expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 398
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 264

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  283                  | expression GEQ . expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 399
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 265

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  282                  | expression LEQ . expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 400
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 266

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  285                  | expression NOT_EQ . expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 401
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 267

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  277                  | expression LEFT_SHIFT . expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 402
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 268

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  276                  | expression RIGHT_SHIFT . expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 403
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 269

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  278                  | expression AND . expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 404
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 270

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  279                  | expression OR . expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 405
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 271

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  288                  | expression DOUBLE_QMARK . expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 406
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 272

  260 unary_operations: expression INCREMENT .

    $padrão  reduzir usando a regra 260 (unary_operations)


Estado 273

  261 unary_operations: expression DECREMENT .

    $padrão  reduzir usando a regra 261 (unary_operations)


Estado 274

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  291                  | expression AS . expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 407
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 275

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  292                  | expression IN . expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 408
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 276

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  290                  | expression IS . expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 409
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 277

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  298                | attr_access START_PAR . argument_list END_PAR
  299 argument_list: . argument_list argument
  300              | . argument
  301              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  302 argument: . expression
  303         | . modifier expression
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 105
    NULL_VALUE   deslocar, e ir ao estado 106
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    IDENTIFIER   [reduzir usando a regra 301 (argument_list)]
    START_PAR    [reduzir usando a regra 301 (argument_list)]
    INCREMENT    [reduzir usando a regra 301 (argument_list)]
    DECREMENT    [reduzir usando a regra 301 (argument_list)]
    BASE         [reduzir usando a regra 301 (argument_list)]
    BREAK        [reduzir usando a regra 301 (argument_list)]
    CONTINUE     [reduzir usando a regra 301 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 301 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 301 (argument_list)]
    SIZEOF       [reduzir usando a regra 301 (argument_list)]
    STACKALLOC   [reduzir usando a regra 301 (argument_list)]
    THIS         [reduzir usando a regra 301 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 301 (argument_list)]
    TYPEOF       [reduzir usando a regra 301 (argument_list)]
    INT_VAL      [reduzir usando a regra 301 (argument_list)]
    UINT_VAL     [reduzir usando a regra 301 (argument_list)]
    LONG_VAL     [reduzir usando a regra 301 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 301 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 301 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 301 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 301 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 301 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 301 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 301 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 301 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 301 (argument_list)]
    STRING_VAL   [reduzir usando a regra 301 (argument_list)]
    $padrão     reduzir usando a regra 301 (argument_list)

    modifier                ir ao estado 410
    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 411
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    argument_list           ir ao estado 412
    argument                ir ao estado 413
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 301 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 301 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 301 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 301 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 301 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 301 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 301 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 301 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 301 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 301 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 301 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 301 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 301 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 301 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 301 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 301 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 301 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 301 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 301 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 278

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  249                       | attr_access ASSIGN . expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 414
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 279

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  250                       | attr_access ADD_ASSIGN . expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 415
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 280

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  251                       | attr_access SUB_ASSIGN . expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 416
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 281

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  252                       | attr_access MUL_ASSIGN . expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 417
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 282

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  253                       | attr_access DIV_ASSIGN . expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 418
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 283

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  254                       | attr_access MOD_ASSIGN . expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 419
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 284

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  255                       | attr_access BIT_AND_ASSIGN . expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 420
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 285

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  256                       | attr_access BIT_OR_ASSIGN . expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 421
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 286

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | attr_access BIT_XOR_ASSIGN . expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 422
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 287

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259                       | attr_access LEFT_SHIFT_ASSIGN . expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 423
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 288

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | attr_access RIGHT_SHIFT_ASSIGN . expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 424
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 289

  100 struct_decl: STRUCT identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 100 (struct_decl)


Estado 290

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   91           | scope CLASS identifier class_father START_CURLY . statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 425
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 291

  106 enum_decl: scope ENUM identifier START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA identifier
  112          | enum_list . COMMA identifier ASSIGN value

    END_CURLY  deslocar, e ir ao estado 426
    COMMA      deslocar, e ir ao estado 198


Estado 292

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  101               | scope INTERFACE identifier START_CURLY statement_list . END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 427
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 293

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   96            | scope STRUCT identifier START_CURLY statement_list . END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 428
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 294

   93 class_decl: scope modifier_list CLASS identifier class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 429


Estado 295

   84 identifier: . IDENTIFIER
  108 enum_decl: scope modifier_list ENUM identifier START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA identifier
  112          | . enum_list COMMA identifier ASSIGN value
  113          | . identifier
  114          | . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 77
    enum_list   ir ao estado 430


Estado 296

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE identifier START_CURLY . statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 431
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 297

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT identifier START_CURLY . statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 432
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 298

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS identifier class_father START_CURLY . statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 433
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 299

  107 enum_decl: modifier_list ENUM identifier START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA identifier
  112          | enum_list . COMMA identifier ASSIGN value

    END_CURLY  deslocar, e ir ao estado 434
    COMMA      deslocar, e ir ao estado 198


Estado 300

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE identifier START_CURLY statement_list . END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 435
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 301

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT identifier START_CURLY statement_list . END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 436
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 302

   94 class_decl: modifier_list scope CLASS identifier class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 437


Estado 303

   84 identifier: . IDENTIFIER
  109 enum_decl: modifier_list scope ENUM identifier START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA identifier
  112          | . enum_list COMMA identifier ASSIGN value
  113          | . identifier
  114          | . identifier ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 77
    enum_list   ir ao estado 438


Estado 304

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE identifier START_CURLY . statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 439
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 305

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT identifier START_CURLY . statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 440
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 306

   95 class_decl: CLASS identifier class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 95 (class_decl)


Estado 307

  114 enum_list: identifier ASSIGN value .

    $padrão  reduzir usando a regra 114 (enum_list)


Estado 308

  111 enum_list: enum_list COMMA identifier .  [END_CURLY, COMMA]
  112          | enum_list COMMA identifier . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 441

    $padrão  reduzir usando a regra 111 (enum_list)


Estado 309

  235 expression: START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 235 (expression)


Estado 310

  297 attr_access: BASE DOT attr_access .

    $padrão  reduzir usando a regra 297 (attr_access)


Estado 311

  228 checked_scope: CHECKED START_PAR expression . END_PAR
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 442
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 312

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  229              | CHECKED START_CURLY statement_list . END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 443
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 313

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: START_CURLY statement_list . END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 444
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 314

  225 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  deslocar, e ir ao estado 445


Estado 315

  226 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    SEMI          deslocar, e ir ao estado 446
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 316

  227 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 447
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 317

  213 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  214             | IF START_PAR expression . END_PAR statement
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 448
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 318

   51 matrix_type: type START_BRCKT . END_BRCKT
   52            | type START_BRCKT . dimensions_def END_BRCKT
   53            | type START_BRCKT . dimensions_undef END_BRCKT
   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   56 dimensions_undef: . dimensions_undef COMMA
   57                 | . %empty  [END_BRCKT, COMMA]
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL
  305 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    deslocar, e ir ao estado 364
    UINT_VAL     deslocar, e ir ao estado 365
    LONG_VAL     deslocar, e ir ao estado 366
    ULONG_VAL    deslocar, e ir ao estado 367
    FLOAT_VAL    deslocar, e ir ao estado 368
    DECIMAL_VAL  deslocar, e ir ao estado 369
    CHAR_VAL     deslocar, e ir ao estado 370
    BYTE_VAL     deslocar, e ir ao estado 371
    SBYTE_VAL    deslocar, e ir ao estado 372
    SHORT_VAL    deslocar, e ir ao estado 373
    USHORT_VAL   deslocar, e ir ao estado 374

    END_BRCKT  [reduzir usando a regra 57 (dimensions_undef)]
    $padrão   reduzir usando a regra 57 (dimensions_undef)

    dimensions_def    ir ao estado 449
    dimensions_undef  ir ao estado 376
    numeric_val       ir ao estado 377


Estado 319

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  247               | NEW identifier START_PAR . END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  248               | NEW identifier START_PAR . argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  299 argument_list: . argument_list argument
  300              | . argument
  301              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  302 argument: . expression
  303         | . modifier expression
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 450
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 105
    NULL_VALUE   deslocar, e ir ao estado 106
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    IDENTIFIER   [reduzir usando a regra 301 (argument_list)]
    START_PAR    [reduzir usando a regra 301 (argument_list)]
    END_PAR      [reduzir usando a regra 301 (argument_list)]
    INCREMENT    [reduzir usando a regra 301 (argument_list)]
    DECREMENT    [reduzir usando a regra 301 (argument_list)]
    BASE         [reduzir usando a regra 301 (argument_list)]
    BREAK        [reduzir usando a regra 301 (argument_list)]
    CONTINUE     [reduzir usando a regra 301 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 301 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 301 (argument_list)]
    SIZEOF       [reduzir usando a regra 301 (argument_list)]
    STACKALLOC   [reduzir usando a regra 301 (argument_list)]
    THIS         [reduzir usando a regra 301 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 301 (argument_list)]
    TYPEOF       [reduzir usando a regra 301 (argument_list)]
    INT_VAL      [reduzir usando a regra 301 (argument_list)]
    UINT_VAL     [reduzir usando a regra 301 (argument_list)]
    LONG_VAL     [reduzir usando a regra 301 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 301 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 301 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 301 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 301 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 301 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 301 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 301 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 301 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 301 (argument_list)]
    STRING_VAL   [reduzir usando a regra 301 (argument_list)]

    modifier                ir ao estado 410
    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 411
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    argument_list           ir ao estado 451
    argument                ir ao estado 413
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 301 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 301 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 301 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 301 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 301 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 301 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 301 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 301 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 301 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 301 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 301 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 301 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 301 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 301 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 301 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 301 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 301 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 301 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 301 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 320

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  269                 | SIZEOF START_PAR expression . END_PAR
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 452
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 321

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  270                 | STACKALLOC START_PAR expression . END_PAR
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 453
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 322

  217 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 454
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 323

  296 attr_access: THIS DOT attr_access .

    $padrão  reduzir usando a regra 296 (attr_access)


Estado 324

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  268                 | TYPEOF START_PAR expression . END_PAR
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 455
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 325

  230 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 456
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 326

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  231                | UNCHECKED START_CURLY statement_list . END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 457
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 327

  165 operator: ADD .

    $padrão  reduzir usando a regra 165 (operator)


Estado 328

  166 operator: SUB .

    $padrão  reduzir usando a regra 166 (operator)


Estado 329

  168 operator: DIV .

    $padrão  reduzir usando a regra 168 (operator)


Estado 330

  167 operator: MUL .

    $padrão  reduzir usando a regra 167 (operator)


Estado 331

  169 operator: MOD .

    $padrão  reduzir usando a regra 169 (operator)


Estado 332

  184 operator: QMARK .

    $padrão  reduzir usando a regra 184 (operator)


Estado 333

  183 operator: BIT_XOR .

    $padrão  reduzir usando a regra 183 (operator)


Estado 334

  174 operator: LESS_THEN .

    $padrão  reduzir usando a regra 174 (operator)


Estado 335

  175 operator: GREATER_THEN .

    $padrão  reduzir usando a regra 175 (operator)


Estado 336

  180 operator: BIT_AND .

    $padrão  reduzir usando a regra 180 (operator)


Estado 337

  181 operator: BIT_OR .

    $padrão  reduzir usando a regra 181 (operator)


Estado 338

  178 operator: EQ .

    $padrão  reduzir usando a regra 178 (operator)


Estado 339

  177 operator: GEQ .

    $padrão  reduzir usando a regra 177 (operator)


Estado 340

  176 operator: LEQ .

    $padrão  reduzir usando a regra 176 (operator)


Estado 341

  179 operator: NOT_EQ .

    $padrão  reduzir usando a regra 179 (operator)


Estado 342

  171 operator: LEFT_SHIFT .

    $padrão  reduzir usando a regra 171 (operator)


Estado 343

  170 operator: RIGHT_SHIFT .

    $padrão  reduzir usando a regra 170 (operator)


Estado 344

  172 operator: AND .

    $padrão  reduzir usando a regra 172 (operator)


Estado 345

  173 operator: OR .

    $padrão  reduzir usando a regra 173 (operator)


Estado 346

  182 operator: DOUBLE_QMARK .

    $padrão  reduzir usando a regra 182 (operator)


Estado 347

  163 operator: INCREMENT .

    $padrão  reduzir usando a regra 163 (operator)


Estado 348

  164 operator: DECREMENT .

    $padrão  reduzir usando a regra 164 (operator)


Estado 349

  185 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  186                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 458


Estado 350

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  136 method_decl_statement: VOID identifier START_PAR . END_PAR method_body
  137                      | VOID identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 459
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 462
    parameter       ir ao estado 463


Estado 351

  224 while_statement: WHILE START_PAR expression . END_PAR loop_body
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 464
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 352

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  189 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  190                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 465


Estado 353

  140 method_decl_statement: scope VOID identifier . START_PAR END_PAR method_body
  141                      | scope VOID identifier . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 466


Estado 354

   84 identifier: . IDENTIFIER
  146 method_decl_statement: scope modifier_list VOID . identifier START_PAR END_PAR method_body
  147                      | scope modifier_list VOID . identifier START_PAR parameter_list END_PAR method_body
  193 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  194                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 34
    OPERATOR    deslocar, e ir ao estado 467

    identifier  ir ao estado 468


Estado 355

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  148 method_decl_statement: scope modifier_list type . identifier START_PAR END_PAR method_body
  149                      | scope modifier_list type . identifier START_PAR parameter_list END_PAR method_body
  195 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope modifier_list type . id_list SEMI
  207 id_list: . id_list COMMA identifier
  208        | . id_list COMMA identifier ASSIGN expression
  209        | . identifier
  210        | . identifier ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238
    OPERATOR     deslocar, e ir ao estado 469

    identifier  ir ao estado 470
    id_list     ir ao estado 471


Estado 356

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  191 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  192                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 472


Estado 357

  142 method_decl_statement: scope type identifier . START_PAR END_PAR method_body
  143                      | scope type identifier . START_PAR parameter_list END_PAR method_body
  209 id_list: identifier .  [SEMI, COMMA]
  210        | identifier . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 473
    ASSIGN     deslocar, e ir ao estado 380

    $padrão  reduzir usando a regra 209 (id_list)


Estado 358

  204 attr_decl_statement: scope type id_list . SEMI
  207 id_list: id_list . COMMA identifier
  208        | id_list . COMMA identifier ASSIGN expression

    SEMI   deslocar, e ir ao estado 474
    COMMA  deslocar, e ir ao estado 382


Estado 359

  144 method_decl_statement: modifier_list VOID identifier . START_PAR END_PAR method_body
  145                      | modifier_list VOID identifier . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 475


Estado 360

   84 identifier: . IDENTIFIER
  150 method_decl_statement: modifier_list scope VOID . identifier START_PAR END_PAR method_body
  151                      | modifier_list scope VOID . identifier START_PAR parameter_list END_PAR method_body
  197 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  198                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 34
    OPERATOR    deslocar, e ir ao estado 476

    identifier  ir ao estado 477


Estado 361

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  152 method_decl_statement: modifier_list scope type . identifier START_PAR END_PAR method_body
  153                      | modifier_list scope type . identifier START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 attr_decl_statement: modifier_list scope type . id_list SEMI
  207 id_list: . id_list COMMA identifier
  208        | . id_list COMMA identifier ASSIGN expression
  209        | . identifier
  210        | . identifier ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238
    OPERATOR     deslocar, e ir ao estado 478

    identifier  ir ao estado 479
    id_list     ir ao estado 480


Estado 362

  209 id_list: identifier .  [SEMI, COMMA]
  210        | identifier . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 380

    $padrão  reduzir usando a regra 209 (id_list)


Estado 363

  203 var_decl_statement: modifier type id_list . SEMI
  207 id_list: id_list . COMMA identifier
  208        | id_list . COMMA identifier ASSIGN expression

    SEMI   deslocar, e ir ao estado 481
    COMMA  deslocar, e ir ao estado 382


Estado 364

   51 matrix_type: type START_BRCKT END_BRCKT .

    $padrão  reduzir usando a regra 51 (matrix_type)


Estado 365

   77 numeric_val: UINT_VAL .

    $padrão  reduzir usando a regra 77 (numeric_val)


Estado 366

   76 numeric_val: LONG_VAL .

    $padrão  reduzir usando a regra 76 (numeric_val)


Estado 367

   81 numeric_val: ULONG_VAL .

    $padrão  reduzir usando a regra 81 (numeric_val)


Estado 368

   78 numeric_val: FLOAT_VAL .

    $padrão  reduzir usando a regra 78 (numeric_val)


Estado 369

   83 numeric_val: DECIMAL_VAL .

    $padrão  reduzir usando a regra 83 (numeric_val)


Estado 370

   75 numeric_val: CHAR_VAL .

    $padrão  reduzir usando a regra 75 (numeric_val)


Estado 371

   74 numeric_val: BYTE_VAL .

    $padrão  reduzir usando a regra 74 (numeric_val)


Estado 372

   79 numeric_val: SBYTE_VAL .

    $padrão  reduzir usando a regra 79 (numeric_val)


Estado 373

   80 numeric_val: SHORT_VAL .

    $padrão  reduzir usando a regra 80 (numeric_val)


Estado 374

   82 numeric_val: USHORT_VAL .

    $padrão  reduzir usando a regra 82 (numeric_val)


Estado 375

   52 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   54 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  deslocar, e ir ao estado 482
    COMMA      deslocar, e ir ao estado 483


Estado 376

   53 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   56 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  deslocar, e ir ao estado 484
    COMMA      deslocar, e ir ao estado 485


Estado 377

   55 dimensions_def: numeric_val .

    $padrão  reduzir usando a regra 55 (dimensions_def)


Estado 378

  187 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  188                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 486


Estado 379

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  138 method_decl_statement: type identifier START_PAR . END_PAR method_body
  139                      | type identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 487
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 488
    parameter       ir ao estado 463


Estado 380

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  210 id_list: identifier ASSIGN . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 489
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 381

  202 var_decl_statement: type id_list SEMI .

    $padrão  reduzir usando a regra 202 (var_decl_statement)


Estado 382

   84 identifier: . IDENTIFIER
  207 id_list: id_list COMMA . identifier
  208        | id_list COMMA . identifier ASSIGN expression

    IDENTIFIER  deslocar, e ir ao estado 34

    identifier  ir ao estado 490


Estado 383

  294 attr_access: identifier DOT attr_access .

    $padrão  reduzir usando a regra 294 (attr_access)


Estado 384

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  215 else_statement: ELSE START_CURLY . statement_list END_CURLY
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 491
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 385

  216 else_statement: ELSE statement .

    $padrão  reduzir usando a regra 216 (else_statement)


Estado 386

   54 dimensions_def: dimensions_def . COMMA numeric_val
  304 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 492
    COMMA      deslocar, e ir ao estado 483


Estado 387

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  271                  | expression ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 271 (binary_operations)]
    QMARK         [reduzir usando a regra 271 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 271 (binary_operations)]
    INCREMENT     [reduzir usando a regra 271 (binary_operations)]
    DECREMENT     [reduzir usando a regra 271 (binary_operations)]
    AS            [reduzir usando a regra 271 (binary_operations)]
    IN            [reduzir usando a regra 271 (binary_operations)]
    IS            [reduzir usando a regra 271 (binary_operations)]
    $padrão      reduzir usando a regra 271 (binary_operations)

    Conflito entre regra 271 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 271 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 271 e token DIV resolvido como shift. (ADD < DIV).
    Conflito entre regra 271 e token MUL resolvido como shift. (ADD < MUL).
    Conflito entre regra 271 e token MOD resolvido como shift. (ADD < MOD).
    Conflito entre regra 271 e token BIT_XOR resolvido como reduce. (BIT_XOR < ADD).
    Conflito entre regra 271 e token LESS_THEN resolvido como reduce. (LESS_THEN < ADD).
    Conflito entre regra 271 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < ADD).
    Conflito entre regra 271 e token BIT_AND resolvido como reduce. (BIT_AND < ADD).
    Conflito entre regra 271 e token BIT_OR resolvido como reduce. (BIT_OR < ADD).
    Conflito entre regra 271 e token EQ resolvido como reduce. (EQ < ADD).
    Conflito entre regra 271 e token GEQ resolvido como reduce. (GEQ < ADD).
    Conflito entre regra 271 e token LEQ resolvido como reduce. (LEQ < ADD).
    Conflito entre regra 271 e token NOT_EQ resolvido como reduce. (NOT_EQ < ADD).
    Conflito entre regra 271 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < ADD).
    Conflito entre regra 271 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < ADD).
    Conflito entre regra 271 e token AND resolvido como reduce. (AND < ADD).
    Conflito entre regra 271 e token OR resolvido como reduce. (OR < ADD).


Estado 388

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  272                  | expression SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 272 (binary_operations)]
    QMARK         [reduzir usando a regra 272 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 272 (binary_operations)]
    INCREMENT     [reduzir usando a regra 272 (binary_operations)]
    DECREMENT     [reduzir usando a regra 272 (binary_operations)]
    AS            [reduzir usando a regra 272 (binary_operations)]
    IN            [reduzir usando a regra 272 (binary_operations)]
    IS            [reduzir usando a regra 272 (binary_operations)]
    $padrão      reduzir usando a regra 272 (binary_operations)

    Conflito entre regra 272 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 272 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 272 e token DIV resolvido como shift. (SUB < DIV).
    Conflito entre regra 272 e token MUL resolvido como shift. (SUB < MUL).
    Conflito entre regra 272 e token MOD resolvido como shift. (SUB < MOD).
    Conflito entre regra 272 e token BIT_XOR resolvido como reduce. (BIT_XOR < SUB).
    Conflito entre regra 272 e token LESS_THEN resolvido como reduce. (LESS_THEN < SUB).
    Conflito entre regra 272 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < SUB).
    Conflito entre regra 272 e token BIT_AND resolvido como reduce. (BIT_AND < SUB).
    Conflito entre regra 272 e token BIT_OR resolvido como reduce. (BIT_OR < SUB).
    Conflito entre regra 272 e token EQ resolvido como reduce. (EQ < SUB).
    Conflito entre regra 272 e token GEQ resolvido como reduce. (GEQ < SUB).
    Conflito entre regra 272 e token LEQ resolvido como reduce. (LEQ < SUB).
    Conflito entre regra 272 e token NOT_EQ resolvido como reduce. (NOT_EQ < SUB).
    Conflito entre regra 272 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < SUB).
    Conflito entre regra 272 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < SUB).
    Conflito entre regra 272 e token AND resolvido como reduce. (AND < SUB).
    Conflito entre regra 272 e token OR resolvido como reduce. (OR < SUB).


Estado 389

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  274                  | expression DIV expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 274 (binary_operations)]
    QMARK         [reduzir usando a regra 274 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 274 (binary_operations)]
    INCREMENT     [reduzir usando a regra 274 (binary_operations)]
    DECREMENT     [reduzir usando a regra 274 (binary_operations)]
    AS            [reduzir usando a regra 274 (binary_operations)]
    IN            [reduzir usando a regra 274 (binary_operations)]
    IS            [reduzir usando a regra 274 (binary_operations)]
    $padrão      reduzir usando a regra 274 (binary_operations)

    Conflito entre regra 274 e token ADD resolvido como reduce. (ADD < DIV).
    Conflito entre regra 274 e token SUB resolvido como reduce. (SUB < DIV).
    Conflito entre regra 274 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 274 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 274 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 274 e token BIT_XOR resolvido como reduce. (BIT_XOR < DIV).
    Conflito entre regra 274 e token LESS_THEN resolvido como reduce. (LESS_THEN < DIV).
    Conflito entre regra 274 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < DIV).
    Conflito entre regra 274 e token BIT_AND resolvido como reduce. (BIT_AND < DIV).
    Conflito entre regra 274 e token BIT_OR resolvido como reduce. (BIT_OR < DIV).
    Conflito entre regra 274 e token EQ resolvido como reduce. (EQ < DIV).
    Conflito entre regra 274 e token GEQ resolvido como reduce. (GEQ < DIV).
    Conflito entre regra 274 e token LEQ resolvido como reduce. (LEQ < DIV).
    Conflito entre regra 274 e token NOT_EQ resolvido como reduce. (NOT_EQ < DIV).
    Conflito entre regra 274 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < DIV).
    Conflito entre regra 274 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < DIV).
    Conflito entre regra 274 e token AND resolvido como reduce. (AND < DIV).
    Conflito entre regra 274 e token OR resolvido como reduce. (OR < DIV).


Estado 390

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  273                  | expression MUL expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 273 (binary_operations)]
    QMARK         [reduzir usando a regra 273 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 273 (binary_operations)]
    INCREMENT     [reduzir usando a regra 273 (binary_operations)]
    DECREMENT     [reduzir usando a regra 273 (binary_operations)]
    AS            [reduzir usando a regra 273 (binary_operations)]
    IN            [reduzir usando a regra 273 (binary_operations)]
    IS            [reduzir usando a regra 273 (binary_operations)]
    $padrão      reduzir usando a regra 273 (binary_operations)

    Conflito entre regra 273 e token ADD resolvido como reduce. (ADD < MUL).
    Conflito entre regra 273 e token SUB resolvido como reduce. (SUB < MUL).
    Conflito entre regra 273 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 273 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 273 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 273 e token BIT_XOR resolvido como reduce. (BIT_XOR < MUL).
    Conflito entre regra 273 e token LESS_THEN resolvido como reduce. (LESS_THEN < MUL).
    Conflito entre regra 273 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MUL).
    Conflito entre regra 273 e token BIT_AND resolvido como reduce. (BIT_AND < MUL).
    Conflito entre regra 273 e token BIT_OR resolvido como reduce. (BIT_OR < MUL).
    Conflito entre regra 273 e token EQ resolvido como reduce. (EQ < MUL).
    Conflito entre regra 273 e token GEQ resolvido como reduce. (GEQ < MUL).
    Conflito entre regra 273 e token LEQ resolvido como reduce. (LEQ < MUL).
    Conflito entre regra 273 e token NOT_EQ resolvido como reduce. (NOT_EQ < MUL).
    Conflito entre regra 273 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MUL).
    Conflito entre regra 273 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MUL).
    Conflito entre regra 273 e token AND resolvido como reduce. (AND < MUL).
    Conflito entre regra 273 e token OR resolvido como reduce. (OR < MUL).


Estado 391

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  275                  | expression MOD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 275 (binary_operations)]
    QMARK         [reduzir usando a regra 275 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 275 (binary_operations)]
    INCREMENT     [reduzir usando a regra 275 (binary_operations)]
    DECREMENT     [reduzir usando a regra 275 (binary_operations)]
    AS            [reduzir usando a regra 275 (binary_operations)]
    IN            [reduzir usando a regra 275 (binary_operations)]
    IS            [reduzir usando a regra 275 (binary_operations)]
    $padrão      reduzir usando a regra 275 (binary_operations)

    Conflito entre regra 275 e token ADD resolvido como reduce. (ADD < MOD).
    Conflito entre regra 275 e token SUB resolvido como reduce. (SUB < MOD).
    Conflito entre regra 275 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 275 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 275 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 275 e token BIT_XOR resolvido como reduce. (BIT_XOR < MOD).
    Conflito entre regra 275 e token LESS_THEN resolvido como reduce. (LESS_THEN < MOD).
    Conflito entre regra 275 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MOD).
    Conflito entre regra 275 e token BIT_AND resolvido como reduce. (BIT_AND < MOD).
    Conflito entre regra 275 e token BIT_OR resolvido como reduce. (BIT_OR < MOD).
    Conflito entre regra 275 e token EQ resolvido como reduce. (EQ < MOD).
    Conflito entre regra 275 e token GEQ resolvido como reduce. (GEQ < MOD).
    Conflito entre regra 275 e token LEQ resolvido como reduce. (LEQ < MOD).
    Conflito entre regra 275 e token NOT_EQ resolvido como reduce. (NOT_EQ < MOD).
    Conflito entre regra 275 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MOD).
    Conflito entre regra 275 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MOD).
    Conflito entre regra 275 e token AND resolvido como reduce. (AND < MOD).
    Conflito entre regra 275 e token OR resolvido como reduce. (OR < MOD).


Estado 392

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  293                   | expression QMARK expression . COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    COLON         deslocar, e ir ao estado 493
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 393

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  289                  | expression BIT_XOR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 289 (binary_operations)]
    QMARK         [reduzir usando a regra 289 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 289 (binary_operations)]
    INCREMENT     [reduzir usando a regra 289 (binary_operations)]
    DECREMENT     [reduzir usando a regra 289 (binary_operations)]
    AS            [reduzir usando a regra 289 (binary_operations)]
    IN            [reduzir usando a regra 289 (binary_operations)]
    IS            [reduzir usando a regra 289 (binary_operations)]
    $padrão      reduzir usando a regra 289 (binary_operations)

    Conflito entre regra 289 e token ADD resolvido como shift. (BIT_XOR < ADD).
    Conflito entre regra 289 e token SUB resolvido como shift. (BIT_XOR < SUB).
    Conflito entre regra 289 e token DIV resolvido como shift. (BIT_XOR < DIV).
    Conflito entre regra 289 e token MUL resolvido como shift. (BIT_XOR < MUL).
    Conflito entre regra 289 e token MOD resolvido como shift. (BIT_XOR < MOD).
    Conflito entre regra 289 e token BIT_XOR resolvido como reduce. (%left BIT_XOR).
    Conflito entre regra 289 e token LESS_THEN resolvido como shift. (BIT_XOR < LESS_THEN).
    Conflito entre regra 289 e token GREATER_THEN resolvido como shift. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 289 e token BIT_AND resolvido como shift. (BIT_XOR < BIT_AND).
    Conflito entre regra 289 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_XOR).
    Conflito entre regra 289 e token EQ resolvido como shift. (BIT_XOR < EQ).
    Conflito entre regra 289 e token GEQ resolvido como shift. (BIT_XOR < GEQ).
    Conflito entre regra 289 e token LEQ resolvido como shift. (BIT_XOR < LEQ).
    Conflito entre regra 289 e token NOT_EQ resolvido como shift. (BIT_XOR < NOT_EQ).
    Conflito entre regra 289 e token LEFT_SHIFT resolvido como shift. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 289 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 289 e token AND resolvido como reduce. (AND < BIT_XOR).
    Conflito entre regra 289 e token OR resolvido como reduce. (OR < BIT_XOR).


Estado 394

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  280                  | expression LESS_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 280 (binary_operations)]
    QMARK         [reduzir usando a regra 280 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 280 (binary_operations)]
    INCREMENT     [reduzir usando a regra 280 (binary_operations)]
    DECREMENT     [reduzir usando a regra 280 (binary_operations)]
    AS            [reduzir usando a regra 280 (binary_operations)]
    IN            [reduzir usando a regra 280 (binary_operations)]
    IS            [reduzir usando a regra 280 (binary_operations)]
    $padrão      reduzir usando a regra 280 (binary_operations)

    Conflito entre regra 280 e token ADD resolvido como shift. (LESS_THEN < ADD).
    Conflito entre regra 280 e token SUB resolvido como shift. (LESS_THEN < SUB).
    Conflito entre regra 280 e token DIV resolvido como shift. (LESS_THEN < DIV).
    Conflito entre regra 280 e token MUL resolvido como shift. (LESS_THEN < MUL).
    Conflito entre regra 280 e token MOD resolvido como shift. (LESS_THEN < MOD).
    Conflito entre regra 280 e token BIT_XOR resolvido como reduce. (BIT_XOR < LESS_THEN).
    Conflito entre regra 280 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 280 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 280 e token BIT_AND resolvido como reduce. (BIT_AND < LESS_THEN).
    Conflito entre regra 280 e token BIT_OR resolvido como reduce. (BIT_OR < LESS_THEN).
    Conflito entre regra 280 e token EQ resolvido como reduce. (EQ < LESS_THEN).
    Conflito entre regra 280 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 280 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 280 e token NOT_EQ resolvido como reduce. (NOT_EQ < LESS_THEN).
    Conflito entre regra 280 e token LEFT_SHIFT resolvido como shift. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 280 e token RIGHT_SHIFT resolvido como shift. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 280 e token AND resolvido como reduce. (AND < LESS_THEN).
    Conflito entre regra 280 e token OR resolvido como reduce. (OR < LESS_THEN).


Estado 395

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  281                  | expression GREATER_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 281 (binary_operations)]
    QMARK         [reduzir usando a regra 281 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 281 (binary_operations)]
    INCREMENT     [reduzir usando a regra 281 (binary_operations)]
    DECREMENT     [reduzir usando a regra 281 (binary_operations)]
    AS            [reduzir usando a regra 281 (binary_operations)]
    IN            [reduzir usando a regra 281 (binary_operations)]
    IS            [reduzir usando a regra 281 (binary_operations)]
    $padrão      reduzir usando a regra 281 (binary_operations)

    Conflito entre regra 281 e token ADD resolvido como shift. (GREATER_THEN < ADD).
    Conflito entre regra 281 e token SUB resolvido como shift. (GREATER_THEN < SUB).
    Conflito entre regra 281 e token DIV resolvido como shift. (GREATER_THEN < DIV).
    Conflito entre regra 281 e token MUL resolvido como shift. (GREATER_THEN < MUL).
    Conflito entre regra 281 e token MOD resolvido como shift. (GREATER_THEN < MOD).
    Conflito entre regra 281 e token BIT_XOR resolvido como reduce. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 281 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 281 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 281 e token BIT_AND resolvido como reduce. (BIT_AND < GREATER_THEN).
    Conflito entre regra 281 e token BIT_OR resolvido como reduce. (BIT_OR < GREATER_THEN).
    Conflito entre regra 281 e token EQ resolvido como reduce. (EQ < GREATER_THEN).
    Conflito entre regra 281 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 281 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 281 e token NOT_EQ resolvido como reduce. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 281 e token LEFT_SHIFT resolvido como shift. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 281 e token RIGHT_SHIFT resolvido como shift. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 281 e token AND resolvido como reduce. (AND < GREATER_THEN).
    Conflito entre regra 281 e token OR resolvido como reduce. (OR < GREATER_THEN).


Estado 396

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  286                  | expression BIT_AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 286 (binary_operations)]
    QMARK         [reduzir usando a regra 286 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 286 (binary_operations)]
    INCREMENT     [reduzir usando a regra 286 (binary_operations)]
    DECREMENT     [reduzir usando a regra 286 (binary_operations)]
    AS            [reduzir usando a regra 286 (binary_operations)]
    IN            [reduzir usando a regra 286 (binary_operations)]
    IS            [reduzir usando a regra 286 (binary_operations)]
    $padrão      reduzir usando a regra 286 (binary_operations)

    Conflito entre regra 286 e token ADD resolvido como shift. (BIT_AND < ADD).
    Conflito entre regra 286 e token SUB resolvido como shift. (BIT_AND < SUB).
    Conflito entre regra 286 e token DIV resolvido como shift. (BIT_AND < DIV).
    Conflito entre regra 286 e token MUL resolvido como shift. (BIT_AND < MUL).
    Conflito entre regra 286 e token MOD resolvido como shift. (BIT_AND < MOD).
    Conflito entre regra 286 e token BIT_XOR resolvido como reduce. (BIT_XOR < BIT_AND).
    Conflito entre regra 286 e token LESS_THEN resolvido como shift. (BIT_AND < LESS_THEN).
    Conflito entre regra 286 e token GREATER_THEN resolvido como shift. (BIT_AND < GREATER_THEN).
    Conflito entre regra 286 e token BIT_AND resolvido como reduce. (%left BIT_AND).
    Conflito entre regra 286 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_AND).
    Conflito entre regra 286 e token EQ resolvido como shift. (BIT_AND < EQ).
    Conflito entre regra 286 e token GEQ resolvido como shift. (BIT_AND < GEQ).
    Conflito entre regra 286 e token LEQ resolvido como shift. (BIT_AND < LEQ).
    Conflito entre regra 286 e token NOT_EQ resolvido como shift. (BIT_AND < NOT_EQ).
    Conflito entre regra 286 e token LEFT_SHIFT resolvido como shift. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 286 e token RIGHT_SHIFT resolvido como shift. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 286 e token AND resolvido como reduce. (AND < BIT_AND).
    Conflito entre regra 286 e token OR resolvido como reduce. (OR < BIT_AND).


Estado 397

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  287                  | expression BIT_OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 287 (binary_operations)]
    QMARK         [reduzir usando a regra 287 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 287 (binary_operations)]
    INCREMENT     [reduzir usando a regra 287 (binary_operations)]
    DECREMENT     [reduzir usando a regra 287 (binary_operations)]
    AS            [reduzir usando a regra 287 (binary_operations)]
    IN            [reduzir usando a regra 287 (binary_operations)]
    IS            [reduzir usando a regra 287 (binary_operations)]
    $padrão      reduzir usando a regra 287 (binary_operations)

    Conflito entre regra 287 e token ADD resolvido como shift. (BIT_OR < ADD).
    Conflito entre regra 287 e token SUB resolvido como shift. (BIT_OR < SUB).
    Conflito entre regra 287 e token DIV resolvido como shift. (BIT_OR < DIV).
    Conflito entre regra 287 e token MUL resolvido como shift. (BIT_OR < MUL).
    Conflito entre regra 287 e token MOD resolvido como shift. (BIT_OR < MOD).
    Conflito entre regra 287 e token BIT_XOR resolvido como shift. (BIT_OR < BIT_XOR).
    Conflito entre regra 287 e token LESS_THEN resolvido como shift. (BIT_OR < LESS_THEN).
    Conflito entre regra 287 e token GREATER_THEN resolvido como shift. (BIT_OR < GREATER_THEN).
    Conflito entre regra 287 e token BIT_AND resolvido como shift. (BIT_OR < BIT_AND).
    Conflito entre regra 287 e token BIT_OR resolvido como reduce. (%left BIT_OR).
    Conflito entre regra 287 e token EQ resolvido como shift. (BIT_OR < EQ).
    Conflito entre regra 287 e token GEQ resolvido como shift. (BIT_OR < GEQ).
    Conflito entre regra 287 e token LEQ resolvido como shift. (BIT_OR < LEQ).
    Conflito entre regra 287 e token NOT_EQ resolvido como shift. (BIT_OR < NOT_EQ).
    Conflito entre regra 287 e token LEFT_SHIFT resolvido como shift. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 287 e token RIGHT_SHIFT resolvido como shift. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 287 e token AND resolvido como reduce. (AND < BIT_OR).
    Conflito entre regra 287 e token OR resolvido como reduce. (OR < BIT_OR).


Estado 398

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  284                  | expression EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 284 (binary_operations)]
    QMARK         [reduzir usando a regra 284 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 284 (binary_operations)]
    INCREMENT     [reduzir usando a regra 284 (binary_operations)]
    DECREMENT     [reduzir usando a regra 284 (binary_operations)]
    AS            [reduzir usando a regra 284 (binary_operations)]
    IN            [reduzir usando a regra 284 (binary_operations)]
    IS            [reduzir usando a regra 284 (binary_operations)]
    $padrão      reduzir usando a regra 284 (binary_operations)

    Conflito entre regra 284 e token ADD resolvido como shift. (EQ < ADD).
    Conflito entre regra 284 e token SUB resolvido como shift. (EQ < SUB).
    Conflito entre regra 284 e token DIV resolvido como shift. (EQ < DIV).
    Conflito entre regra 284 e token MUL resolvido como shift. (EQ < MUL).
    Conflito entre regra 284 e token MOD resolvido como shift. (EQ < MOD).
    Conflito entre regra 284 e token BIT_XOR resolvido como reduce. (BIT_XOR < EQ).
    Conflito entre regra 284 e token LESS_THEN resolvido como shift. (EQ < LESS_THEN).
    Conflito entre regra 284 e token GREATER_THEN resolvido como shift. (EQ < GREATER_THEN).
    Conflito entre regra 284 e token BIT_AND resolvido como reduce. (BIT_AND < EQ).
    Conflito entre regra 284 e token BIT_OR resolvido como reduce. (BIT_OR < EQ).
    Conflito entre regra 284 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 284 e token GEQ resolvido como shift. (EQ < GEQ).
    Conflito entre regra 284 e token LEQ resolvido como shift. (EQ < LEQ).
    Conflito entre regra 284 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 284 e token LEFT_SHIFT resolvido como shift. (EQ < LEFT_SHIFT).
    Conflito entre regra 284 e token RIGHT_SHIFT resolvido como shift. (EQ < RIGHT_SHIFT).
    Conflito entre regra 284 e token AND resolvido como reduce. (AND < EQ).
    Conflito entre regra 284 e token OR resolvido como reduce. (OR < EQ).


Estado 399

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  283                  | expression GEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 283 (binary_operations)]
    QMARK         [reduzir usando a regra 283 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 283 (binary_operations)]
    INCREMENT     [reduzir usando a regra 283 (binary_operations)]
    DECREMENT     [reduzir usando a regra 283 (binary_operations)]
    AS            [reduzir usando a regra 283 (binary_operations)]
    IN            [reduzir usando a regra 283 (binary_operations)]
    IS            [reduzir usando a regra 283 (binary_operations)]
    $padrão      reduzir usando a regra 283 (binary_operations)

    Conflito entre regra 283 e token ADD resolvido como shift. (GEQ < ADD).
    Conflito entre regra 283 e token SUB resolvido como shift. (GEQ < SUB).
    Conflito entre regra 283 e token DIV resolvido como shift. (GEQ < DIV).
    Conflito entre regra 283 e token MUL resolvido como shift. (GEQ < MUL).
    Conflito entre regra 283 e token MOD resolvido como shift. (GEQ < MOD).
    Conflito entre regra 283 e token BIT_XOR resolvido como reduce. (BIT_XOR < GEQ).
    Conflito entre regra 283 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 283 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 283 e token BIT_AND resolvido como reduce. (BIT_AND < GEQ).
    Conflito entre regra 283 e token BIT_OR resolvido como reduce. (BIT_OR < GEQ).
    Conflito entre regra 283 e token EQ resolvido como reduce. (EQ < GEQ).
    Conflito entre regra 283 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 283 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 283 e token NOT_EQ resolvido como reduce. (NOT_EQ < GEQ).
    Conflito entre regra 283 e token LEFT_SHIFT resolvido como shift. (GEQ < LEFT_SHIFT).
    Conflito entre regra 283 e token RIGHT_SHIFT resolvido como shift. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 283 e token AND resolvido como reduce. (AND < GEQ).
    Conflito entre regra 283 e token OR resolvido como reduce. (OR < GEQ).


Estado 400

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  282                  | expression LEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 282 (binary_operations)]
    QMARK         [reduzir usando a regra 282 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 282 (binary_operations)]
    INCREMENT     [reduzir usando a regra 282 (binary_operations)]
    DECREMENT     [reduzir usando a regra 282 (binary_operations)]
    AS            [reduzir usando a regra 282 (binary_operations)]
    IN            [reduzir usando a regra 282 (binary_operations)]
    IS            [reduzir usando a regra 282 (binary_operations)]
    $padrão      reduzir usando a regra 282 (binary_operations)

    Conflito entre regra 282 e token ADD resolvido como shift. (LEQ < ADD).
    Conflito entre regra 282 e token SUB resolvido como shift. (LEQ < SUB).
    Conflito entre regra 282 e token DIV resolvido como shift. (LEQ < DIV).
    Conflito entre regra 282 e token MUL resolvido como shift. (LEQ < MUL).
    Conflito entre regra 282 e token MOD resolvido como shift. (LEQ < MOD).
    Conflito entre regra 282 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEQ).
    Conflito entre regra 282 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 282 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 282 e token BIT_AND resolvido como reduce. (BIT_AND < LEQ).
    Conflito entre regra 282 e token BIT_OR resolvido como reduce. (BIT_OR < LEQ).
    Conflito entre regra 282 e token EQ resolvido como reduce. (EQ < LEQ).
    Conflito entre regra 282 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 282 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 282 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEQ).
    Conflito entre regra 282 e token LEFT_SHIFT resolvido como shift. (LEQ < LEFT_SHIFT).
    Conflito entre regra 282 e token RIGHT_SHIFT resolvido como shift. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 282 e token AND resolvido como reduce. (AND < LEQ).
    Conflito entre regra 282 e token OR resolvido como reduce. (OR < LEQ).


Estado 401

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  285                  | expression NOT_EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 285 (binary_operations)]
    QMARK         [reduzir usando a regra 285 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 285 (binary_operations)]
    INCREMENT     [reduzir usando a regra 285 (binary_operations)]
    DECREMENT     [reduzir usando a regra 285 (binary_operations)]
    AS            [reduzir usando a regra 285 (binary_operations)]
    IN            [reduzir usando a regra 285 (binary_operations)]
    IS            [reduzir usando a regra 285 (binary_operations)]
    $padrão      reduzir usando a regra 285 (binary_operations)

    Conflito entre regra 285 e token ADD resolvido como shift. (NOT_EQ < ADD).
    Conflito entre regra 285 e token SUB resolvido como shift. (NOT_EQ < SUB).
    Conflito entre regra 285 e token DIV resolvido como shift. (NOT_EQ < DIV).
    Conflito entre regra 285 e token MUL resolvido como shift. (NOT_EQ < MUL).
    Conflito entre regra 285 e token MOD resolvido como shift. (NOT_EQ < MOD).
    Conflito entre regra 285 e token BIT_XOR resolvido como reduce. (BIT_XOR < NOT_EQ).
    Conflito entre regra 285 e token LESS_THEN resolvido como shift. (NOT_EQ < LESS_THEN).
    Conflito entre regra 285 e token GREATER_THEN resolvido como shift. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 285 e token BIT_AND resolvido como reduce. (BIT_AND < NOT_EQ).
    Conflito entre regra 285 e token BIT_OR resolvido como reduce. (BIT_OR < NOT_EQ).
    Conflito entre regra 285 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 285 e token GEQ resolvido como shift. (NOT_EQ < GEQ).
    Conflito entre regra 285 e token LEQ resolvido como shift. (NOT_EQ < LEQ).
    Conflito entre regra 285 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 285 e token LEFT_SHIFT resolvido como shift. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 285 e token RIGHT_SHIFT resolvido como shift. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 285 e token AND resolvido como reduce. (AND < NOT_EQ).
    Conflito entre regra 285 e token OR resolvido como reduce. (OR < NOT_EQ).


Estado 402

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  277                  | expression LEFT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 277 (binary_operations)]
    QMARK         [reduzir usando a regra 277 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 277 (binary_operations)]
    INCREMENT     [reduzir usando a regra 277 (binary_operations)]
    DECREMENT     [reduzir usando a regra 277 (binary_operations)]
    AS            [reduzir usando a regra 277 (binary_operations)]
    IN            [reduzir usando a regra 277 (binary_operations)]
    IS            [reduzir usando a regra 277 (binary_operations)]
    $padrão      reduzir usando a regra 277 (binary_operations)

    Conflito entre regra 277 e token ADD resolvido como shift. (LEFT_SHIFT < ADD).
    Conflito entre regra 277 e token SUB resolvido como shift. (LEFT_SHIFT < SUB).
    Conflito entre regra 277 e token DIV resolvido como shift. (LEFT_SHIFT < DIV).
    Conflito entre regra 277 e token MUL resolvido como shift. (LEFT_SHIFT < MUL).
    Conflito entre regra 277 e token MOD resolvido como shift. (LEFT_SHIFT < MOD).
    Conflito entre regra 277 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 277 e token LESS_THEN resolvido como reduce. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 277 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 277 e token BIT_AND resolvido como reduce. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 277 e token BIT_OR resolvido como reduce. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 277 e token EQ resolvido como reduce. (EQ < LEFT_SHIFT).
    Conflito entre regra 277 e token GEQ resolvido como reduce. (GEQ < LEFT_SHIFT).
    Conflito entre regra 277 e token LEQ resolvido como reduce. (LEQ < LEFT_SHIFT).
    Conflito entre regra 277 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 277 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 277 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 277 e token AND resolvido como reduce. (AND < LEFT_SHIFT).
    Conflito entre regra 277 e token OR resolvido como reduce. (OR < LEFT_SHIFT).


Estado 403

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  276                  | expression RIGHT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 276 (binary_operations)]
    QMARK         [reduzir usando a regra 276 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 276 (binary_operations)]
    INCREMENT     [reduzir usando a regra 276 (binary_operations)]
    DECREMENT     [reduzir usando a regra 276 (binary_operations)]
    AS            [reduzir usando a regra 276 (binary_operations)]
    IN            [reduzir usando a regra 276 (binary_operations)]
    IS            [reduzir usando a regra 276 (binary_operations)]
    $padrão      reduzir usando a regra 276 (binary_operations)

    Conflito entre regra 276 e token ADD resolvido como shift. (RIGHT_SHIFT < ADD).
    Conflito entre regra 276 e token SUB resolvido como shift. (RIGHT_SHIFT < SUB).
    Conflito entre regra 276 e token DIV resolvido como shift. (RIGHT_SHIFT < DIV).
    Conflito entre regra 276 e token MUL resolvido como shift. (RIGHT_SHIFT < MUL).
    Conflito entre regra 276 e token MOD resolvido como shift. (RIGHT_SHIFT < MOD).
    Conflito entre regra 276 e token BIT_XOR resolvido como reduce. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 276 e token LESS_THEN resolvido como reduce. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 276 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 276 e token BIT_AND resolvido como reduce. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 276 e token BIT_OR resolvido como reduce. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 276 e token EQ resolvido como reduce. (EQ < RIGHT_SHIFT).
    Conflito entre regra 276 e token GEQ resolvido como reduce. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 276 e token LEQ resolvido como reduce. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 276 e token NOT_EQ resolvido como reduce. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 276 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 276 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 276 e token AND resolvido como reduce. (AND < RIGHT_SHIFT).
    Conflito entre regra 276 e token OR resolvido como reduce. (OR < RIGHT_SHIFT).


Estado 404

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  278                  | expression AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 278 (binary_operations)]
    QMARK         [reduzir usando a regra 278 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 278 (binary_operations)]
    INCREMENT     [reduzir usando a regra 278 (binary_operations)]
    DECREMENT     [reduzir usando a regra 278 (binary_operations)]
    AS            [reduzir usando a regra 278 (binary_operations)]
    IN            [reduzir usando a regra 278 (binary_operations)]
    IS            [reduzir usando a regra 278 (binary_operations)]
    $padrão      reduzir usando a regra 278 (binary_operations)

    Conflito entre regra 278 e token ADD resolvido como shift. (AND < ADD).
    Conflito entre regra 278 e token SUB resolvido como shift. (AND < SUB).
    Conflito entre regra 278 e token DIV resolvido como shift. (AND < DIV).
    Conflito entre regra 278 e token MUL resolvido como shift. (AND < MUL).
    Conflito entre regra 278 e token MOD resolvido como shift. (AND < MOD).
    Conflito entre regra 278 e token BIT_XOR resolvido como shift. (AND < BIT_XOR).
    Conflito entre regra 278 e token LESS_THEN resolvido como shift. (AND < LESS_THEN).
    Conflito entre regra 278 e token GREATER_THEN resolvido como shift. (AND < GREATER_THEN).
    Conflito entre regra 278 e token BIT_AND resolvido como shift. (AND < BIT_AND).
    Conflito entre regra 278 e token BIT_OR resolvido como shift. (AND < BIT_OR).
    Conflito entre regra 278 e token EQ resolvido como shift. (AND < EQ).
    Conflito entre regra 278 e token GEQ resolvido como shift. (AND < GEQ).
    Conflito entre regra 278 e token LEQ resolvido como shift. (AND < LEQ).
    Conflito entre regra 278 e token NOT_EQ resolvido como shift. (AND < NOT_EQ).
    Conflito entre regra 278 e token LEFT_SHIFT resolvido como shift. (AND < LEFT_SHIFT).
    Conflito entre regra 278 e token RIGHT_SHIFT resolvido como shift. (AND < RIGHT_SHIFT).
    Conflito entre regra 278 e token AND resolvido como reduce. (%left AND).
    Conflito entre regra 278 e token OR resolvido como reduce. (OR < AND).


Estado 405

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  279                  | expression OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 279 (binary_operations)]
    QMARK         [reduzir usando a regra 279 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 279 (binary_operations)]
    INCREMENT     [reduzir usando a regra 279 (binary_operations)]
    DECREMENT     [reduzir usando a regra 279 (binary_operations)]
    AS            [reduzir usando a regra 279 (binary_operations)]
    IN            [reduzir usando a regra 279 (binary_operations)]
    IS            [reduzir usando a regra 279 (binary_operations)]
    $padrão      reduzir usando a regra 279 (binary_operations)

    Conflito entre regra 279 e token ADD resolvido como shift. (OR < ADD).
    Conflito entre regra 279 e token SUB resolvido como shift. (OR < SUB).
    Conflito entre regra 279 e token DIV resolvido como shift. (OR < DIV).
    Conflito entre regra 279 e token MUL resolvido como shift. (OR < MUL).
    Conflito entre regra 279 e token MOD resolvido como shift. (OR < MOD).
    Conflito entre regra 279 e token BIT_XOR resolvido como shift. (OR < BIT_XOR).
    Conflito entre regra 279 e token LESS_THEN resolvido como shift. (OR < LESS_THEN).
    Conflito entre regra 279 e token GREATER_THEN resolvido como shift. (OR < GREATER_THEN).
    Conflito entre regra 279 e token BIT_AND resolvido como shift. (OR < BIT_AND).
    Conflito entre regra 279 e token BIT_OR resolvido como shift. (OR < BIT_OR).
    Conflito entre regra 279 e token EQ resolvido como shift. (OR < EQ).
    Conflito entre regra 279 e token GEQ resolvido como shift. (OR < GEQ).
    Conflito entre regra 279 e token LEQ resolvido como shift. (OR < LEQ).
    Conflito entre regra 279 e token NOT_EQ resolvido como shift. (OR < NOT_EQ).
    Conflito entre regra 279 e token LEFT_SHIFT resolvido como shift. (OR < LEFT_SHIFT).
    Conflito entre regra 279 e token RIGHT_SHIFT resolvido como shift. (OR < RIGHT_SHIFT).
    Conflito entre regra 279 e token AND resolvido como shift. (OR < AND).
    Conflito entre regra 279 e token OR resolvido como reduce. (%left OR).


Estado 406

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  288                  | expression DOUBLE_QMARK expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 288 (binary_operations)]
    ADD           [reduzir usando a regra 288 (binary_operations)]
    SUB           [reduzir usando a regra 288 (binary_operations)]
    DIV           [reduzir usando a regra 288 (binary_operations)]
    MUL           [reduzir usando a regra 288 (binary_operations)]
    MOD           [reduzir usando a regra 288 (binary_operations)]
    QMARK         [reduzir usando a regra 288 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 288 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 288 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 288 (binary_operations)]
    BIT_AND       [reduzir usando a regra 288 (binary_operations)]
    BIT_OR        [reduzir usando a regra 288 (binary_operations)]
    EQ            [reduzir usando a regra 288 (binary_operations)]
    GEQ           [reduzir usando a regra 288 (binary_operations)]
    LEQ           [reduzir usando a regra 288 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 288 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 288 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 288 (binary_operations)]
    AND           [reduzir usando a regra 288 (binary_operations)]
    OR            [reduzir usando a regra 288 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 288 (binary_operations)]
    INCREMENT     [reduzir usando a regra 288 (binary_operations)]
    DECREMENT     [reduzir usando a regra 288 (binary_operations)]
    AS            [reduzir usando a regra 288 (binary_operations)]
    IN            [reduzir usando a regra 288 (binary_operations)]
    IS            [reduzir usando a regra 288 (binary_operations)]
    $padrão      reduzir usando a regra 288 (binary_operations)


Estado 407

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  291                  | expression AS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 291 (binary_operations)]
    ADD           [reduzir usando a regra 291 (binary_operations)]
    SUB           [reduzir usando a regra 291 (binary_operations)]
    DIV           [reduzir usando a regra 291 (binary_operations)]
    MUL           [reduzir usando a regra 291 (binary_operations)]
    MOD           [reduzir usando a regra 291 (binary_operations)]
    QMARK         [reduzir usando a regra 291 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 291 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 291 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 291 (binary_operations)]
    BIT_AND       [reduzir usando a regra 291 (binary_operations)]
    BIT_OR        [reduzir usando a regra 291 (binary_operations)]
    EQ            [reduzir usando a regra 291 (binary_operations)]
    GEQ           [reduzir usando a regra 291 (binary_operations)]
    LEQ           [reduzir usando a regra 291 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 291 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 291 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 291 (binary_operations)]
    AND           [reduzir usando a regra 291 (binary_operations)]
    OR            [reduzir usando a regra 291 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 291 (binary_operations)]
    INCREMENT     [reduzir usando a regra 291 (binary_operations)]
    DECREMENT     [reduzir usando a regra 291 (binary_operations)]
    AS            [reduzir usando a regra 291 (binary_operations)]
    IN            [reduzir usando a regra 291 (binary_operations)]
    IS            [reduzir usando a regra 291 (binary_operations)]
    $padrão      reduzir usando a regra 291 (binary_operations)


Estado 408

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  292                  | expression IN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 292 (binary_operations)]
    ADD           [reduzir usando a regra 292 (binary_operations)]
    SUB           [reduzir usando a regra 292 (binary_operations)]
    DIV           [reduzir usando a regra 292 (binary_operations)]
    MUL           [reduzir usando a regra 292 (binary_operations)]
    MOD           [reduzir usando a regra 292 (binary_operations)]
    QMARK         [reduzir usando a regra 292 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 292 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 292 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 292 (binary_operations)]
    BIT_AND       [reduzir usando a regra 292 (binary_operations)]
    BIT_OR        [reduzir usando a regra 292 (binary_operations)]
    EQ            [reduzir usando a regra 292 (binary_operations)]
    GEQ           [reduzir usando a regra 292 (binary_operations)]
    LEQ           [reduzir usando a regra 292 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 292 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 292 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 292 (binary_operations)]
    AND           [reduzir usando a regra 292 (binary_operations)]
    OR            [reduzir usando a regra 292 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 292 (binary_operations)]
    INCREMENT     [reduzir usando a regra 292 (binary_operations)]
    DECREMENT     [reduzir usando a regra 292 (binary_operations)]
    AS            [reduzir usando a regra 292 (binary_operations)]
    IN            [reduzir usando a regra 292 (binary_operations)]
    IS            [reduzir usando a regra 292 (binary_operations)]
    $padrão      reduzir usando a regra 292 (binary_operations)


Estado 409

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  290                  | expression IS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 290 (binary_operations)]
    ADD           [reduzir usando a regra 290 (binary_operations)]
    SUB           [reduzir usando a regra 290 (binary_operations)]
    DIV           [reduzir usando a regra 290 (binary_operations)]
    MUL           [reduzir usando a regra 290 (binary_operations)]
    MOD           [reduzir usando a regra 290 (binary_operations)]
    QMARK         [reduzir usando a regra 290 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 290 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 290 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 290 (binary_operations)]
    BIT_AND       [reduzir usando a regra 290 (binary_operations)]
    BIT_OR        [reduzir usando a regra 290 (binary_operations)]
    EQ            [reduzir usando a regra 290 (binary_operations)]
    GEQ           [reduzir usando a regra 290 (binary_operations)]
    LEQ           [reduzir usando a regra 290 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 290 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 290 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 290 (binary_operations)]
    AND           [reduzir usando a regra 290 (binary_operations)]
    OR            [reduzir usando a regra 290 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 290 (binary_operations)]
    INCREMENT     [reduzir usando a regra 290 (binary_operations)]
    DECREMENT     [reduzir usando a regra 290 (binary_operations)]
    AS            [reduzir usando a regra 290 (binary_operations)]
    IN            [reduzir usando a regra 290 (binary_operations)]
    IS            [reduzir usando a regra 290 (binary_operations)]
    $padrão      reduzir usando a regra 290 (binary_operations)


Estado 410

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 argument: modifier . expression
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 494
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 411

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  302 argument: expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    ADD        [reduzir usando a regra 302 (argument)]
    SUB        [reduzir usando a regra 302 (argument)]
    INCREMENT  [reduzir usando a regra 302 (argument)]
    DECREMENT  [reduzir usando a regra 302 (argument)]
    $padrão   reduzir usando a regra 302 (argument)


Estado 412

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  298                | attr_access START_PAR argument_list . END_PAR
  299 argument_list: argument_list . argument
  302 argument: . expression
  303         | . modifier expression
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 495
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 105
    NULL_VALUE   deslocar, e ir ao estado 106
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    modifier                ir ao estado 410
    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 411
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    argument                ir ao estado 496
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 413

  300 argument_list: argument .

    $padrão  reduzir usando a regra 300 (argument_list)


Estado 414

  249 assignment_expressions: attr_access ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 249 (assignment_expressions)]
    QMARK         [reduzir usando a regra 249 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 249 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 249 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 249 (assignment_expressions)]
    AS            [reduzir usando a regra 249 (assignment_expressions)]
    IN            [reduzir usando a regra 249 (assignment_expressions)]
    IS            [reduzir usando a regra 249 (assignment_expressions)]
    $padrão      reduzir usando a regra 249 (assignment_expressions)

    Conflito entre regra 249 e token ADD resolvido como shift. (ASSIGN < ADD).
    Conflito entre regra 249 e token SUB resolvido como shift. (ASSIGN < SUB).
    Conflito entre regra 249 e token DIV resolvido como shift. (ASSIGN < DIV).
    Conflito entre regra 249 e token MUL resolvido como shift. (ASSIGN < MUL).
    Conflito entre regra 249 e token MOD resolvido como shift. (ASSIGN < MOD).
    Conflito entre regra 249 e token BIT_XOR resolvido como shift. (ASSIGN < BIT_XOR).
    Conflito entre regra 249 e token LESS_THEN resolvido como shift. (ASSIGN < LESS_THEN).
    Conflito entre regra 249 e token GREATER_THEN resolvido como shift. (ASSIGN < GREATER_THEN).
    Conflito entre regra 249 e token BIT_AND resolvido como shift. (ASSIGN < BIT_AND).
    Conflito entre regra 249 e token BIT_OR resolvido como shift. (ASSIGN < BIT_OR).
    Conflito entre regra 249 e token EQ resolvido como shift. (ASSIGN < EQ).
    Conflito entre regra 249 e token GEQ resolvido como shift. (ASSIGN < GEQ).
    Conflito entre regra 249 e token LEQ resolvido como shift. (ASSIGN < LEQ).
    Conflito entre regra 249 e token NOT_EQ resolvido como shift. (ASSIGN < NOT_EQ).
    Conflito entre regra 249 e token LEFT_SHIFT resolvido como shift. (ASSIGN < LEFT_SHIFT).
    Conflito entre regra 249 e token RIGHT_SHIFT resolvido como shift. (ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 249 e token AND resolvido como shift. (ASSIGN < AND).
    Conflito entre regra 249 e token OR resolvido como shift. (ASSIGN < OR).


Estado 415

  250 assignment_expressions: attr_access ADD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 250 (assignment_expressions)]
    QMARK         [reduzir usando a regra 250 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 250 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 250 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 250 (assignment_expressions)]
    AS            [reduzir usando a regra 250 (assignment_expressions)]
    IN            [reduzir usando a regra 250 (assignment_expressions)]
    IS            [reduzir usando a regra 250 (assignment_expressions)]
    $padrão      reduzir usando a regra 250 (assignment_expressions)

    Conflito entre regra 250 e token ADD resolvido como shift. (ADD_ASSIGN < ADD).
    Conflito entre regra 250 e token SUB resolvido como shift. (ADD_ASSIGN < SUB).
    Conflito entre regra 250 e token DIV resolvido como shift. (ADD_ASSIGN < DIV).
    Conflito entre regra 250 e token MUL resolvido como shift. (ADD_ASSIGN < MUL).
    Conflito entre regra 250 e token MOD resolvido como shift. (ADD_ASSIGN < MOD).
    Conflito entre regra 250 e token BIT_XOR resolvido como shift. (ADD_ASSIGN < BIT_XOR).
    Conflito entre regra 250 e token LESS_THEN resolvido como shift. (ADD_ASSIGN < LESS_THEN).
    Conflito entre regra 250 e token GREATER_THEN resolvido como shift. (ADD_ASSIGN < GREATER_THEN).
    Conflito entre regra 250 e token BIT_AND resolvido como shift. (ADD_ASSIGN < BIT_AND).
    Conflito entre regra 250 e token BIT_OR resolvido como shift. (ADD_ASSIGN < BIT_OR).
    Conflito entre regra 250 e token EQ resolvido como shift. (ADD_ASSIGN < EQ).
    Conflito entre regra 250 e token GEQ resolvido como shift. (ADD_ASSIGN < GEQ).
    Conflito entre regra 250 e token LEQ resolvido como shift. (ADD_ASSIGN < LEQ).
    Conflito entre regra 250 e token NOT_EQ resolvido como shift. (ADD_ASSIGN < NOT_EQ).
    Conflito entre regra 250 e token LEFT_SHIFT resolvido como shift. (ADD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 250 e token RIGHT_SHIFT resolvido como shift. (ADD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 250 e token AND resolvido como shift. (ADD_ASSIGN < AND).
    Conflito entre regra 250 e token OR resolvido como shift. (ADD_ASSIGN < OR).


Estado 416

  251 assignment_expressions: attr_access SUB_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 251 (assignment_expressions)]
    QMARK         [reduzir usando a regra 251 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 251 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 251 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 251 (assignment_expressions)]
    AS            [reduzir usando a regra 251 (assignment_expressions)]
    IN            [reduzir usando a regra 251 (assignment_expressions)]
    IS            [reduzir usando a regra 251 (assignment_expressions)]
    $padrão      reduzir usando a regra 251 (assignment_expressions)

    Conflito entre regra 251 e token ADD resolvido como shift. (SUB_ASSIGN < ADD).
    Conflito entre regra 251 e token SUB resolvido como shift. (SUB_ASSIGN < SUB).
    Conflito entre regra 251 e token DIV resolvido como shift. (SUB_ASSIGN < DIV).
    Conflito entre regra 251 e token MUL resolvido como shift. (SUB_ASSIGN < MUL).
    Conflito entre regra 251 e token MOD resolvido como shift. (SUB_ASSIGN < MOD).
    Conflito entre regra 251 e token BIT_XOR resolvido como shift. (SUB_ASSIGN < BIT_XOR).
    Conflito entre regra 251 e token LESS_THEN resolvido como shift. (SUB_ASSIGN < LESS_THEN).
    Conflito entre regra 251 e token GREATER_THEN resolvido como shift. (SUB_ASSIGN < GREATER_THEN).
    Conflito entre regra 251 e token BIT_AND resolvido como shift. (SUB_ASSIGN < BIT_AND).
    Conflito entre regra 251 e token BIT_OR resolvido como shift. (SUB_ASSIGN < BIT_OR).
    Conflito entre regra 251 e token EQ resolvido como shift. (SUB_ASSIGN < EQ).
    Conflito entre regra 251 e token GEQ resolvido como shift. (SUB_ASSIGN < GEQ).
    Conflito entre regra 251 e token LEQ resolvido como shift. (SUB_ASSIGN < LEQ).
    Conflito entre regra 251 e token NOT_EQ resolvido como shift. (SUB_ASSIGN < NOT_EQ).
    Conflito entre regra 251 e token LEFT_SHIFT resolvido como shift. (SUB_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 251 e token RIGHT_SHIFT resolvido como shift. (SUB_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 251 e token AND resolvido como shift. (SUB_ASSIGN < AND).
    Conflito entre regra 251 e token OR resolvido como shift. (SUB_ASSIGN < OR).


Estado 417

  252 assignment_expressions: attr_access MUL_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 252 (assignment_expressions)]
    QMARK         [reduzir usando a regra 252 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 252 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 252 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 252 (assignment_expressions)]
    AS            [reduzir usando a regra 252 (assignment_expressions)]
    IN            [reduzir usando a regra 252 (assignment_expressions)]
    IS            [reduzir usando a regra 252 (assignment_expressions)]
    $padrão      reduzir usando a regra 252 (assignment_expressions)

    Conflito entre regra 252 e token ADD resolvido como shift. (MUL_ASSIGN < ADD).
    Conflito entre regra 252 e token SUB resolvido como shift. (MUL_ASSIGN < SUB).
    Conflito entre regra 252 e token DIV resolvido como shift. (MUL_ASSIGN < DIV).
    Conflito entre regra 252 e token MUL resolvido como shift. (MUL_ASSIGN < MUL).
    Conflito entre regra 252 e token MOD resolvido como shift. (MUL_ASSIGN < MOD).
    Conflito entre regra 252 e token BIT_XOR resolvido como shift. (MUL_ASSIGN < BIT_XOR).
    Conflito entre regra 252 e token LESS_THEN resolvido como shift. (MUL_ASSIGN < LESS_THEN).
    Conflito entre regra 252 e token GREATER_THEN resolvido como shift. (MUL_ASSIGN < GREATER_THEN).
    Conflito entre regra 252 e token BIT_AND resolvido como shift. (MUL_ASSIGN < BIT_AND).
    Conflito entre regra 252 e token BIT_OR resolvido como shift. (MUL_ASSIGN < BIT_OR).
    Conflito entre regra 252 e token EQ resolvido como shift. (MUL_ASSIGN < EQ).
    Conflito entre regra 252 e token GEQ resolvido como shift. (MUL_ASSIGN < GEQ).
    Conflito entre regra 252 e token LEQ resolvido como shift. (MUL_ASSIGN < LEQ).
    Conflito entre regra 252 e token NOT_EQ resolvido como shift. (MUL_ASSIGN < NOT_EQ).
    Conflito entre regra 252 e token LEFT_SHIFT resolvido como shift. (MUL_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 252 e token RIGHT_SHIFT resolvido como shift. (MUL_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 252 e token AND resolvido como shift. (MUL_ASSIGN < AND).
    Conflito entre regra 252 e token OR resolvido como shift. (MUL_ASSIGN < OR).


Estado 418

  253 assignment_expressions: attr_access DIV_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 253 (assignment_expressions)]
    QMARK         [reduzir usando a regra 253 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 253 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    AS            [reduzir usando a regra 253 (assignment_expressions)]
    IN            [reduzir usando a regra 253 (assignment_expressions)]
    IS            [reduzir usando a regra 253 (assignment_expressions)]
    $padrão      reduzir usando a regra 253 (assignment_expressions)

    Conflito entre regra 253 e token ADD resolvido como shift. (DIV_ASSIGN < ADD).
    Conflito entre regra 253 e token SUB resolvido como shift. (DIV_ASSIGN < SUB).
    Conflito entre regra 253 e token DIV resolvido como shift. (DIV_ASSIGN < DIV).
    Conflito entre regra 253 e token MUL resolvido como shift. (DIV_ASSIGN < MUL).
    Conflito entre regra 253 e token MOD resolvido como shift. (DIV_ASSIGN < MOD).
    Conflito entre regra 253 e token BIT_XOR resolvido como shift. (DIV_ASSIGN < BIT_XOR).
    Conflito entre regra 253 e token LESS_THEN resolvido como shift. (DIV_ASSIGN < LESS_THEN).
    Conflito entre regra 253 e token GREATER_THEN resolvido como shift. (DIV_ASSIGN < GREATER_THEN).
    Conflito entre regra 253 e token BIT_AND resolvido como shift. (DIV_ASSIGN < BIT_AND).
    Conflito entre regra 253 e token BIT_OR resolvido como shift. (DIV_ASSIGN < BIT_OR).
    Conflito entre regra 253 e token EQ resolvido como shift. (DIV_ASSIGN < EQ).
    Conflito entre regra 253 e token GEQ resolvido como shift. (DIV_ASSIGN < GEQ).
    Conflito entre regra 253 e token LEQ resolvido como shift. (DIV_ASSIGN < LEQ).
    Conflito entre regra 253 e token NOT_EQ resolvido como shift. (DIV_ASSIGN < NOT_EQ).
    Conflito entre regra 253 e token LEFT_SHIFT resolvido como shift. (DIV_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 253 e token RIGHT_SHIFT resolvido como shift. (DIV_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 253 e token AND resolvido como shift. (DIV_ASSIGN < AND).
    Conflito entre regra 253 e token OR resolvido como shift. (DIV_ASSIGN < OR).


Estado 419

  254 assignment_expressions: attr_access MOD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 254 (assignment_expressions)]
    QMARK         [reduzir usando a regra 254 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 254 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    AS            [reduzir usando a regra 254 (assignment_expressions)]
    IN            [reduzir usando a regra 254 (assignment_expressions)]
    IS            [reduzir usando a regra 254 (assignment_expressions)]
    $padrão      reduzir usando a regra 254 (assignment_expressions)

    Conflito entre regra 254 e token ADD resolvido como shift. (MOD_ASSIGN < ADD).
    Conflito entre regra 254 e token SUB resolvido como shift. (MOD_ASSIGN < SUB).
    Conflito entre regra 254 e token DIV resolvido como shift. (MOD_ASSIGN < DIV).
    Conflito entre regra 254 e token MUL resolvido como shift. (MOD_ASSIGN < MUL).
    Conflito entre regra 254 e token MOD resolvido como shift. (MOD_ASSIGN < MOD).
    Conflito entre regra 254 e token BIT_XOR resolvido como shift. (MOD_ASSIGN < BIT_XOR).
    Conflito entre regra 254 e token LESS_THEN resolvido como shift. (MOD_ASSIGN < LESS_THEN).
    Conflito entre regra 254 e token GREATER_THEN resolvido como shift. (MOD_ASSIGN < GREATER_THEN).
    Conflito entre regra 254 e token BIT_AND resolvido como shift. (MOD_ASSIGN < BIT_AND).
    Conflito entre regra 254 e token BIT_OR resolvido como shift. (MOD_ASSIGN < BIT_OR).
    Conflito entre regra 254 e token EQ resolvido como shift. (MOD_ASSIGN < EQ).
    Conflito entre regra 254 e token GEQ resolvido como shift. (MOD_ASSIGN < GEQ).
    Conflito entre regra 254 e token LEQ resolvido como shift. (MOD_ASSIGN < LEQ).
    Conflito entre regra 254 e token NOT_EQ resolvido como shift. (MOD_ASSIGN < NOT_EQ).
    Conflito entre regra 254 e token LEFT_SHIFT resolvido como shift. (MOD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 254 e token RIGHT_SHIFT resolvido como shift. (MOD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 254 e token AND resolvido como shift. (MOD_ASSIGN < AND).
    Conflito entre regra 254 e token OR resolvido como shift. (MOD_ASSIGN < OR).


Estado 420

  255 assignment_expressions: attr_access BIT_AND_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 255 (assignment_expressions)]
    QMARK         [reduzir usando a regra 255 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 255 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    AS            [reduzir usando a regra 255 (assignment_expressions)]
    IN            [reduzir usando a regra 255 (assignment_expressions)]
    IS            [reduzir usando a regra 255 (assignment_expressions)]
    $padrão      reduzir usando a regra 255 (assignment_expressions)

    Conflito entre regra 255 e token ADD resolvido como shift. (BIT_AND_ASSIGN < ADD).
    Conflito entre regra 255 e token SUB resolvido como shift. (BIT_AND_ASSIGN < SUB).
    Conflito entre regra 255 e token DIV resolvido como shift. (BIT_AND_ASSIGN < DIV).
    Conflito entre regra 255 e token MUL resolvido como shift. (BIT_AND_ASSIGN < MUL).
    Conflito entre regra 255 e token MOD resolvido como shift. (BIT_AND_ASSIGN < MOD).
    Conflito entre regra 255 e token BIT_XOR resolvido como shift. (BIT_AND_ASSIGN < BIT_XOR).
    Conflito entre regra 255 e token LESS_THEN resolvido como shift. (BIT_AND_ASSIGN < LESS_THEN).
    Conflito entre regra 255 e token GREATER_THEN resolvido como shift. (BIT_AND_ASSIGN < GREATER_THEN).
    Conflito entre regra 255 e token BIT_AND resolvido como shift. (BIT_AND_ASSIGN < BIT_AND).
    Conflito entre regra 255 e token BIT_OR resolvido como shift. (BIT_AND_ASSIGN < BIT_OR).
    Conflito entre regra 255 e token EQ resolvido como shift. (BIT_AND_ASSIGN < EQ).
    Conflito entre regra 255 e token GEQ resolvido como shift. (BIT_AND_ASSIGN < GEQ).
    Conflito entre regra 255 e token LEQ resolvido como shift. (BIT_AND_ASSIGN < LEQ).
    Conflito entre regra 255 e token NOT_EQ resolvido como shift. (BIT_AND_ASSIGN < NOT_EQ).
    Conflito entre regra 255 e token LEFT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 255 e token RIGHT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 255 e token AND resolvido como shift. (BIT_AND_ASSIGN < AND).
    Conflito entre regra 255 e token OR resolvido como shift. (BIT_AND_ASSIGN < OR).


Estado 421

  256 assignment_expressions: attr_access BIT_OR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 256 (assignment_expressions)]
    QMARK         [reduzir usando a regra 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 256 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    AS            [reduzir usando a regra 256 (assignment_expressions)]
    IN            [reduzir usando a regra 256 (assignment_expressions)]
    IS            [reduzir usando a regra 256 (assignment_expressions)]
    $padrão      reduzir usando a regra 256 (assignment_expressions)

    Conflito entre regra 256 e token ADD resolvido como shift. (BIT_OR_ASSIGN < ADD).
    Conflito entre regra 256 e token SUB resolvido como shift. (BIT_OR_ASSIGN < SUB).
    Conflito entre regra 256 e token DIV resolvido como shift. (BIT_OR_ASSIGN < DIV).
    Conflito entre regra 256 e token MUL resolvido como shift. (BIT_OR_ASSIGN < MUL).
    Conflito entre regra 256 e token MOD resolvido como shift. (BIT_OR_ASSIGN < MOD).
    Conflito entre regra 256 e token BIT_XOR resolvido como shift. (BIT_OR_ASSIGN < BIT_XOR).
    Conflito entre regra 256 e token LESS_THEN resolvido como shift. (BIT_OR_ASSIGN < LESS_THEN).
    Conflito entre regra 256 e token GREATER_THEN resolvido como shift. (BIT_OR_ASSIGN < GREATER_THEN).
    Conflito entre regra 256 e token BIT_AND resolvido como shift. (BIT_OR_ASSIGN < BIT_AND).
    Conflito entre regra 256 e token BIT_OR resolvido como shift. (BIT_OR_ASSIGN < BIT_OR).
    Conflito entre regra 256 e token EQ resolvido como shift. (BIT_OR_ASSIGN < EQ).
    Conflito entre regra 256 e token GEQ resolvido como shift. (BIT_OR_ASSIGN < GEQ).
    Conflito entre regra 256 e token LEQ resolvido como shift. (BIT_OR_ASSIGN < LEQ).
    Conflito entre regra 256 e token NOT_EQ resolvido como shift. (BIT_OR_ASSIGN < NOT_EQ).
    Conflito entre regra 256 e token LEFT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 256 e token RIGHT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 256 e token AND resolvido como shift. (BIT_OR_ASSIGN < AND).
    Conflito entre regra 256 e token OR resolvido como shift. (BIT_OR_ASSIGN < OR).


Estado 422

  257 assignment_expressions: attr_access BIT_XOR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 257 (assignment_expressions)]
    QMARK         [reduzir usando a regra 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 257 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    AS            [reduzir usando a regra 257 (assignment_expressions)]
    IN            [reduzir usando a regra 257 (assignment_expressions)]
    IS            [reduzir usando a regra 257 (assignment_expressions)]
    $padrão      reduzir usando a regra 257 (assignment_expressions)

    Conflito entre regra 257 e token ADD resolvido como shift. (BIT_XOR_ASSIGN < ADD).
    Conflito entre regra 257 e token SUB resolvido como shift. (BIT_XOR_ASSIGN < SUB).
    Conflito entre regra 257 e token DIV resolvido como shift. (BIT_XOR_ASSIGN < DIV).
    Conflito entre regra 257 e token MUL resolvido como shift. (BIT_XOR_ASSIGN < MUL).
    Conflito entre regra 257 e token MOD resolvido como shift. (BIT_XOR_ASSIGN < MOD).
    Conflito entre regra 257 e token BIT_XOR resolvido como shift. (BIT_XOR_ASSIGN < BIT_XOR).
    Conflito entre regra 257 e token LESS_THEN resolvido como shift. (BIT_XOR_ASSIGN < LESS_THEN).
    Conflito entre regra 257 e token GREATER_THEN resolvido como shift. (BIT_XOR_ASSIGN < GREATER_THEN).
    Conflito entre regra 257 e token BIT_AND resolvido como shift. (BIT_XOR_ASSIGN < BIT_AND).
    Conflito entre regra 257 e token BIT_OR resolvido como shift. (BIT_XOR_ASSIGN < BIT_OR).
    Conflito entre regra 257 e token EQ resolvido como shift. (BIT_XOR_ASSIGN < EQ).
    Conflito entre regra 257 e token GEQ resolvido como shift. (BIT_XOR_ASSIGN < GEQ).
    Conflito entre regra 257 e token LEQ resolvido como shift. (BIT_XOR_ASSIGN < LEQ).
    Conflito entre regra 257 e token NOT_EQ resolvido como shift. (BIT_XOR_ASSIGN < NOT_EQ).
    Conflito entre regra 257 e token LEFT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 257 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 257 e token AND resolvido como shift. (BIT_XOR_ASSIGN < AND).
    Conflito entre regra 257 e token OR resolvido como shift. (BIT_XOR_ASSIGN < OR).


Estado 423

  259 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 259 (assignment_expressions)]
    QMARK         [reduzir usando a regra 259 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 259 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    AS            [reduzir usando a regra 259 (assignment_expressions)]
    IN            [reduzir usando a regra 259 (assignment_expressions)]
    IS            [reduzir usando a regra 259 (assignment_expressions)]
    $padrão      reduzir usando a regra 259 (assignment_expressions)

    Conflito entre regra 259 e token ADD resolvido como shift. (LEFT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 259 e token SUB resolvido como shift. (LEFT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 259 e token DIV resolvido como shift. (LEFT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 259 e token MUL resolvido como shift. (LEFT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 259 e token MOD resolvido como shift. (LEFT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 259 e token BIT_XOR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 259 e token LESS_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 259 e token GREATER_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 259 e token BIT_AND resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 259 e token BIT_OR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 259 e token EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 259 e token GEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 259 e token LEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 259 e token NOT_EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 259 e token LEFT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 259 e token RIGHT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 259 e token AND resolvido como shift. (LEFT_SHIFT_ASSIGN < AND).
    Conflito entre regra 259 e token OR resolvido como shift. (LEFT_SHIFT_ASSIGN < OR).


Estado 424

  258 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 258 (assignment_expressions)]
    QMARK         [reduzir usando a regra 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 258 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    AS            [reduzir usando a regra 258 (assignment_expressions)]
    IN            [reduzir usando a regra 258 (assignment_expressions)]
    IS            [reduzir usando a regra 258 (assignment_expressions)]
    $padrão      reduzir usando a regra 258 (assignment_expressions)

    Conflito entre regra 258 e token ADD resolvido como shift. (RIGHT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 258 e token SUB resolvido como shift. (RIGHT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 258 e token DIV resolvido como shift. (RIGHT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 258 e token MUL resolvido como shift. (RIGHT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 258 e token MOD resolvido como shift. (RIGHT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 258 e token BIT_XOR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 258 e token LESS_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 258 e token GREATER_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 258 e token BIT_AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 258 e token BIT_OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 258 e token EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 258 e token GEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 258 e token LEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 258 e token NOT_EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 258 e token LEFT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 258 e token RIGHT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 258 e token AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < AND).
    Conflito entre regra 258 e token OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < OR).


Estado 425

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   91           | scope CLASS identifier class_father START_CURLY statement_list . END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 497
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 426

  106 enum_decl: scope ENUM identifier START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 106 (enum_decl)


Estado 427

  101 interface_decl: scope INTERFACE identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 101 (interface_decl)


Estado 428

   96 struct_decl: scope STRUCT identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 96 (struct_decl)


Estado 429

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS identifier class_father START_CURLY . statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 498
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 430

  108 enum_decl: scope modifier_list ENUM identifier START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA identifier
  112          | enum_list . COMMA identifier ASSIGN value

    END_CURLY  deslocar, e ir ao estado 499
    COMMA      deslocar, e ir ao estado 198


Estado 431

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE identifier START_CURLY statement_list . END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 500
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 432

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT identifier START_CURLY statement_list . END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 501
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 433

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS identifier class_father START_CURLY statement_list . END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 502
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 434

  107 enum_decl: modifier_list ENUM identifier START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 107 (enum_decl)


Estado 435

  102 interface_decl: modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 102 (interface_decl)


Estado 436

   97 struct_decl: modifier_list STRUCT identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 97 (struct_decl)


Estado 437

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS identifier class_father START_CURLY . statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 503
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 438

  109 enum_decl: modifier_list scope ENUM identifier START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA identifier
  112          | enum_list . COMMA identifier ASSIGN value

    END_CURLY  deslocar, e ir ao estado 504
    COMMA      deslocar, e ir ao estado 198


Estado 439

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE identifier START_CURLY statement_list . END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 505
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 440

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT identifier START_CURLY statement_list . END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 506
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 441

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  112 enum_list: enum_list COMMA identifier ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 97
    NULL_VALUE   deslocar, e ir ao estado 106
    TRUE_VAL     deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value  ir ao estado 507


Estado 442

  228 checked_scope: CHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 228 (checked_scope)


Estado 443

  229 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 229 (checked_scope)


Estado 444

  222 loop_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 222 (loop_body)


Estado 445

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  225 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 508
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 446

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  226 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 509
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 447

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: . START_CURLY statement_list END_CURLY
  223          | . statement
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227                  | FOREACH START_PAR expression END_PAR . loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 211
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 212
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    loop_body               ir ao estado 510
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 448

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  214             | IF START_PAR expression END_PAR . statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 511
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 512
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 449

   52 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   54 dimensions_def: dimensions_def . COMMA numeric_val
  305 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 513
    COMMA      deslocar, e ir ao estado 483


Estado 450

  247 obj_instancing: NEW identifier START_PAR END_PAR .

    $padrão  reduzir usando a regra 247 (obj_instancing)


Estado 451

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  248               | NEW identifier START_PAR argument_list . END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  299 argument_list: argument_list . argument
  302 argument: . expression
  303         | . modifier expression
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 514
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 105
    NULL_VALUE   deslocar, e ir ao estado 106
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    modifier                ir ao estado 410
    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 411
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    argument                ir ao estado 496
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 452

  269 unary_operations: SIZEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 269 (unary_operations)


Estado 453

  270 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 270 (unary_operations)


Estado 454

  217 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 515


Estado 455

  268 unary_operations: TYPEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 268 (unary_operations)


Estado 456

  230 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 230 (unchecked_scope)


Estado 457

  231 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 231 (unchecked_scope)


Estado 458

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  185 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  186                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 516
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 517
    parameter       ir ao estado 463


Estado 459

  136 method_decl_statement: VOID identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 521


Estado 460

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  161 parameter: modifier_list . type identifier
  162          | modifier_list . type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier       ir ao estado 53
    type           ir ao estado 522
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234


Estado 461

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  159 parameter: type . identifier
  160          | type . identifier expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238

    identifier  ir ao estado 523


Estado 462

  137 method_decl_statement: VOID identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 524
    COMMA    deslocar, e ir ao estado 525


Estado 463

  155 parameter_list: parameter .

    $padrão  reduzir usando a regra 155 (parameter_list)


Estado 464

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: . START_CURLY statement_list END_CURLY
  223          | . statement
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224                | WHILE START_PAR expression END_PAR . loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 211
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 212
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    loop_body               ir ao estado 526
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 465

  189 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  190                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 527


Estado 466

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  140 method_decl_statement: scope VOID identifier START_PAR . END_PAR method_body
  141                      | scope VOID identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 528
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 529
    parameter       ir ao estado 463


Estado 467

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  193 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  194                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 530


Estado 468

  146 method_decl_statement: scope modifier_list VOID identifier . START_PAR END_PAR method_body
  147                      | scope modifier_list VOID identifier . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 531


Estado 469

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  195 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  196                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 532


Estado 470

  148 method_decl_statement: scope modifier_list type identifier . START_PAR END_PAR method_body
  149                      | scope modifier_list type identifier . START_PAR parameter_list END_PAR method_body
  209 id_list: identifier .  [SEMI, COMMA]
  210        | identifier . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 533
    ASSIGN     deslocar, e ir ao estado 380

    $padrão  reduzir usando a regra 209 (id_list)


Estado 471

  206 attr_decl_statement: scope modifier_list type id_list . SEMI
  207 id_list: id_list . COMMA identifier
  208        | id_list . COMMA identifier ASSIGN expression

    SEMI   deslocar, e ir ao estado 534
    COMMA  deslocar, e ir ao estado 382


Estado 472

  191 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  192                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 535


Estado 473

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  142 method_decl_statement: scope type identifier START_PAR . END_PAR method_body
  143                      | scope type identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 536
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 537
    parameter       ir ao estado 463


Estado 474

  204 attr_decl_statement: scope type id_list SEMI .

    $padrão  reduzir usando a regra 204 (attr_decl_statement)


Estado 475

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  144 method_decl_statement: modifier_list VOID identifier START_PAR . END_PAR method_body
  145                      | modifier_list VOID identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 538
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 539
    parameter       ir ao estado 463


Estado 476

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  197 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  198                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 540


Estado 477

  150 method_decl_statement: modifier_list scope VOID identifier . START_PAR END_PAR method_body
  151                      | modifier_list scope VOID identifier . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 541


Estado 478

  163 operator: . INCREMENT
  164         | . DECREMENT
  165         | . ADD
  166         | . SUB
  167         | . MUL
  168         | . DIV
  169         | . MOD
  170         | . RIGHT_SHIFT
  171         | . LEFT_SHIFT
  172         | . AND
  173         | . OR
  174         | . LESS_THEN
  175         | . GREATER_THEN
  176         | . LEQ
  177         | . GEQ
  178         | . EQ
  179         | . NOT_EQ
  180         | . BIT_AND
  181         | . BIT_OR
  182         | . DOUBLE_QMARK
  183         | . BIT_XOR
  184         | . QMARK
  199 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  200                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 542


Estado 479

  152 method_decl_statement: modifier_list scope type identifier . START_PAR END_PAR method_body
  153                      | modifier_list scope type identifier . START_PAR parameter_list END_PAR method_body
  209 id_list: identifier .  [SEMI, COMMA]
  210        | identifier . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 543
    ASSIGN     deslocar, e ir ao estado 380

    $padrão  reduzir usando a regra 209 (id_list)


Estado 480

  205 attr_decl_statement: modifier_list scope type id_list . SEMI
  207 id_list: id_list . COMMA identifier
  208        | id_list . COMMA identifier ASSIGN expression

    SEMI   deslocar, e ir ao estado 544
    COMMA  deslocar, e ir ao estado 382


Estado 481

  203 var_decl_statement: modifier type id_list SEMI .

    $padrão  reduzir usando a regra 203 (var_decl_statement)


Estado 482

   52 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 52 (matrix_type)


Estado 483

   54 dimensions_def: dimensions_def COMMA . numeric_val
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL

    UINT_VAL     deslocar, e ir ao estado 365
    LONG_VAL     deslocar, e ir ao estado 366
    ULONG_VAL    deslocar, e ir ao estado 367
    FLOAT_VAL    deslocar, e ir ao estado 368
    DECIMAL_VAL  deslocar, e ir ao estado 369
    CHAR_VAL     deslocar, e ir ao estado 370
    BYTE_VAL     deslocar, e ir ao estado 371
    SBYTE_VAL    deslocar, e ir ao estado 372
    SHORT_VAL    deslocar, e ir ao estado 373
    USHORT_VAL   deslocar, e ir ao estado 374

    numeric_val  ir ao estado 545


Estado 484

   53 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $padrão  reduzir usando a regra 53 (matrix_type)


Estado 485

   56 dimensions_undef: dimensions_undef COMMA .

    $padrão  reduzir usando a regra 56 (dimensions_undef)


Estado 486

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  187 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  188                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 546
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 547
    parameter       ir ao estado 463


Estado 487

  138 method_decl_statement: type identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 548


Estado 488

  139 method_decl_statement: type identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 549
    COMMA    deslocar, e ir ao estado 525


Estado 489

  210 id_list: identifier ASSIGN expression .  [SEMI, COMMA]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    $padrão  reduzir usando a regra 210 (id_list)


Estado 490

  207 id_list: id_list COMMA identifier .  [SEMI, COMMA]
  208        | id_list COMMA identifier . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 550

    $padrão  reduzir usando a regra 207 (id_list)


Estado 491

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  215 else_statement: ELSE START_CURLY statement_list . END_CURLY
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 551
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 492

  304 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 304 (matrix_indexing)


Estado 493

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  293                   | expression QMARK expression COLON . expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 552
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 494

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  303 argument: modifier expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    ADD        [reduzir usando a regra 303 (argument)]
    SUB        [reduzir usando a regra 303 (argument)]
    INCREMENT  [reduzir usando a regra 303 (argument)]
    DECREMENT  [reduzir usando a regra 303 (argument)]
    $padrão   reduzir usando a regra 303 (argument)


Estado 495

  298 method_invoking: attr_access START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 298 (method_invoking)


Estado 496

  299 argument_list: argument_list argument .

    $padrão  reduzir usando a regra 299 (argument_list)


Estado 497

   91 class_decl: scope CLASS identifier class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 91 (class_decl)


Estado 498

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS identifier class_father START_CURLY statement_list . END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 553
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 499

  108 enum_decl: scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 108 (enum_decl)


Estado 500

  103 interface_decl: scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 103 (interface_decl)


Estado 501

   98 struct_decl: scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 98 (struct_decl)


Estado 502

   92 class_decl: modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 92 (class_decl)


Estado 503

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS identifier class_father START_CURLY statement_list . END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 554
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 504

  109 enum_decl: modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 109 (enum_decl)


Estado 505

  104 interface_decl: modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 104 (interface_decl)


Estado 506

   99 struct_decl: modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 99 (struct_decl)


Estado 507

  112 enum_list: enum_list COMMA identifier ASSIGN value .

    $padrão  reduzir usando a regra 112 (enum_list)


Estado 508

  225 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 555
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 509

  226 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    SEMI          deslocar, e ir ao estado 556
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 510

  227 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 227 (foreach_statement)


Estado 511

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 557
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 512

  214 if_statement: IF START_PAR expression END_PAR statement .

    $padrão  reduzir usando a regra 214 (if_statement)


Estado 513

   52 matrix_type: type START_BRCKT dimensions_def END_BRCKT .  [START_BRCKT]
  305 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    START_BRCKT  reduzir usando a regra 52 (matrix_type)
    START_BRCKT  [reduzir usando a regra 305 (matrix_instancing)]
    $padrão     reduzir usando a regra 305 (matrix_instancing)


Estado 514

  248 obj_instancing: NEW identifier START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 248 (obj_instancing)


Estado 515

  217 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY
  218 cases_list: . cases_list CASE expression COLON statement_list
  219           | . cases_list DEFAULT COLON statement_list
  220           | . CASE expression COLON statement_list
  221           | . DEFAULT COLON statement_list

    CASE     deslocar, e ir ao estado 558
    DEFAULT  deslocar, e ir ao estado 559

    cases_list  ir ao estado 560


Estado 516

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  185 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 561


Estado 517

  154 parameter_list: parameter_list . COMMA parameter
  186 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 562
    COMMA    deslocar, e ir ao estado 525


Estado 518

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  156 method_body: START_CURLY . statement_list END_CURLY
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 563
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 519

  158 method_body: SEMI .

    $padrão  reduzir usando a regra 158 (method_body)


Estado 520

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  157 method_body: LAMBDA . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 564
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 521

  136 method_decl_statement: VOID identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 136 (method_decl_statement)


Estado 522

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  161 parameter: modifier_list type . identifier
  162          | modifier_list type . identifier expression

    IDENTIFIER   deslocar, e ir ao estado 34
    START_BRCKT  deslocar, e ir ao estado 238

    identifier  ir ao estado 565


Estado 523

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  159 parameter: type identifier .  [END_PAR, COMMA]
  160          | type identifier . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 159 (parameter)

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 566
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 524

  137 method_decl_statement: VOID identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 567


Estado 525

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: parameter_list COMMA . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list  ir ao estado 460
    modifier       ir ao estado 28
    type           ir ao estado 461
    nullable_type  ir ao estado 141
    simple_type    ir ao estado 142
    numeric_type   ir ao estado 143
    integer_type   ir ao estado 144
    floating_type  ir ao estado 145
    matrix_type    ir ao estado 146
    identifier     ir ao estado 234
    parameter      ir ao estado 568


Estado 526

  224 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 224 (while_statement)


Estado 527

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  189 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  190                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 569
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 570
    parameter       ir ao estado 463


Estado 528

  140 method_decl_statement: scope VOID identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 571


Estado 529

  141 method_decl_statement: scope VOID identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 572
    COMMA    deslocar, e ir ao estado 525


Estado 530

  193 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  194                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 573


Estado 531

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  146 method_decl_statement: scope modifier_list VOID identifier START_PAR . END_PAR method_body
  147                      | scope modifier_list VOID identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 574
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 575
    parameter       ir ao estado 463


Estado 532

  195 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  196                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 576


Estado 533

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  148 method_decl_statement: scope modifier_list type identifier START_PAR . END_PAR method_body
  149                      | scope modifier_list type identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 577
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 578
    parameter       ir ao estado 463


Estado 534

  206 attr_decl_statement: scope modifier_list type id_list SEMI .

    $padrão  reduzir usando a regra 206 (attr_decl_statement)


Estado 535

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  191 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  192                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 579
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 580
    parameter       ir ao estado 463


Estado 536

  142 method_decl_statement: scope type identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 581


Estado 537

  143 method_decl_statement: scope type identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 582
    COMMA    deslocar, e ir ao estado 525


Estado 538

  144 method_decl_statement: modifier_list VOID identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 583


Estado 539

  145 method_decl_statement: modifier_list VOID identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 584
    COMMA    deslocar, e ir ao estado 525


Estado 540

  197 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  198                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 585


Estado 541

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  150 method_decl_statement: modifier_list scope VOID identifier START_PAR . END_PAR method_body
  151                      | modifier_list scope VOID identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 586
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 587
    parameter       ir ao estado 463


Estado 542

  199 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  200                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 588


Estado 543

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  152 method_decl_statement: modifier_list scope type identifier START_PAR . END_PAR method_body
  153                      | modifier_list scope type identifier START_PAR . parameter_list END_PAR method_body
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 589
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 590
    parameter       ir ao estado 463


Estado 544

  205 attr_decl_statement: modifier_list scope type id_list SEMI .

    $padrão  reduzir usando a regra 205 (attr_decl_statement)


Estado 545

   54 dimensions_def: dimensions_def COMMA numeric_val .

    $padrão  reduzir usando a regra 54 (dimensions_def)


Estado 546

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  187 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 591


Estado 547

  154 parameter_list: parameter_list . COMMA parameter
  188 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 592
    COMMA    deslocar, e ir ao estado 525


Estado 548

  138 method_decl_statement: type identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 138 (method_decl_statement)


Estado 549

  139 method_decl_statement: type identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 593


Estado 550

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  208 id_list: id_list COMMA identifier ASSIGN . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 594
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 551

  215 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 215 (else_statement)


Estado 552

  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  293                   | expression QMARK expression COLON expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    START_BRCKT   [reduzir usando a regra 293 (ternary_operations)]
    ADD           [reduzir usando a regra 293 (ternary_operations)]
    SUB           [reduzir usando a regra 293 (ternary_operations)]
    DIV           [reduzir usando a regra 293 (ternary_operations)]
    MUL           [reduzir usando a regra 293 (ternary_operations)]
    MOD           [reduzir usando a regra 293 (ternary_operations)]
    QMARK         [reduzir usando a regra 293 (ternary_operations)]
    BIT_XOR       [reduzir usando a regra 293 (ternary_operations)]
    LESS_THEN     [reduzir usando a regra 293 (ternary_operations)]
    GREATER_THEN  [reduzir usando a regra 293 (ternary_operations)]
    BIT_AND       [reduzir usando a regra 293 (ternary_operations)]
    BIT_OR        [reduzir usando a regra 293 (ternary_operations)]
    EQ            [reduzir usando a regra 293 (ternary_operations)]
    GEQ           [reduzir usando a regra 293 (ternary_operations)]
    LEQ           [reduzir usando a regra 293 (ternary_operations)]
    NOT_EQ        [reduzir usando a regra 293 (ternary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 293 (ternary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 293 (ternary_operations)]
    AND           [reduzir usando a regra 293 (ternary_operations)]
    OR            [reduzir usando a regra 293 (ternary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 293 (ternary_operations)]
    INCREMENT     [reduzir usando a regra 293 (ternary_operations)]
    DECREMENT     [reduzir usando a regra 293 (ternary_operations)]
    AS            [reduzir usando a regra 293 (ternary_operations)]
    IN            [reduzir usando a regra 293 (ternary_operations)]
    IS            [reduzir usando a regra 293 (ternary_operations)]
    $padrão      reduzir usando a regra 293 (ternary_operations)


Estado 553

   93 class_decl: scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 93 (class_decl)


Estado 554

   94 class_decl: modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 94 (class_decl)


Estado 555

  225 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  deslocar, e ir ao estado 595


Estado 556

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  226 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 596
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 557

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 597
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 558

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  220 cases_list: CASE . expression COLON statement_list
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 598
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 559

  221 cases_list: DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 599


Estado 560

  217 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  218 cases_list: cases_list . CASE expression COLON statement_list
  219           | cases_list . DEFAULT COLON statement_list

    END_CURLY  deslocar, e ir ao estado 600
    CASE       deslocar, e ir ao estado 601
    DEFAULT    deslocar, e ir ao estado 602


Estado 561

  185 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 185 (operator_overloading)


Estado 562

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  186 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 603


Estado 563

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  156 method_body: START_CURLY statement_list . END_CURLY
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 604
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 564

  157 method_body: LAMBDA expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    ADD        [reduzir usando a regra 157 (method_body)]
    SUB        [reduzir usando a regra 157 (method_body)]
    INCREMENT  [reduzir usando a regra 157 (method_body)]
    DECREMENT  [reduzir usando a regra 157 (method_body)]
    $padrão   reduzir usando a regra 157 (method_body)


Estado 565

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  161 parameter: modifier_list type identifier .  [END_PAR, COMMA]
  162          | modifier_list type identifier . expression
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 161 (parameter)

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 605
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 566

  160 parameter: type identifier expression .  [END_PAR, COMMA]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    $padrão  reduzir usando a regra 160 (parameter)


Estado 567

  137 method_decl_statement: VOID identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 137 (method_decl_statement)


Estado 568

  154 parameter_list: parameter_list COMMA parameter .

    $padrão  reduzir usando a regra 154 (parameter_list)


Estado 569

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  189 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 606


Estado 570

  154 parameter_list: parameter_list . COMMA parameter
  190 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 607
    COMMA    deslocar, e ir ao estado 525


Estado 571

  140 method_decl_statement: scope VOID identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 140 (method_decl_statement)


Estado 572

  141 method_decl_statement: scope VOID identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 608


Estado 573

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  194                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 609
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 610
    parameter       ir ao estado 463


Estado 574

  146 method_decl_statement: scope modifier_list VOID identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 611


Estado 575

  147 method_decl_statement: scope modifier_list VOID identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 612
    COMMA    deslocar, e ir ao estado 525


Estado 576

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  196                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 613
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 614
    parameter       ir ao estado 463


Estado 577

  148 method_decl_statement: scope modifier_list type identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 615


Estado 578

  149 method_decl_statement: scope modifier_list type identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 616
    COMMA    deslocar, e ir ao estado 525


Estado 579

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  191 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 617


Estado 580

  154 parameter_list: parameter_list . COMMA parameter
  192 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 618
    COMMA    deslocar, e ir ao estado 525


Estado 581

  142 method_decl_statement: scope type identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 142 (method_decl_statement)


Estado 582

  143 method_decl_statement: scope type identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 619


Estado 583

  144 method_decl_statement: modifier_list VOID identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 144 (method_decl_statement)


Estado 584

  145 method_decl_statement: modifier_list VOID identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 620


Estado 585

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  198                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 621
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 622
    parameter       ir ao estado 463


Estado 586

  150 method_decl_statement: modifier_list scope VOID identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 623


Estado 587

  151 method_decl_statement: modifier_list scope VOID identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 624
    COMMA    deslocar, e ir ao estado 525


Estado 588

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   84 identifier: . IDENTIFIER
  154 parameter_list: . parameter_list COMMA parameter
  155               | . parameter
  159 parameter: . type identifier
  160          | . type identifier expression
  161          | . modifier_list type identifier
  162          | . modifier_list type identifier expression
  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  200                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 34
    END_PAR       deslocar, e ir ao estado 625
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 98
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 460
    modifier        ir ao estado 28
    type            ir ao estado 461
    nullable_type   ir ao estado 141
    simple_type     ir ao estado 142
    numeric_type    ir ao estado 143
    integer_type    ir ao estado 144
    floating_type   ir ao estado 145
    matrix_type     ir ao estado 146
    identifier      ir ao estado 234
    parameter_list  ir ao estado 626
    parameter       ir ao estado 463


Estado 589

  152 method_decl_statement: modifier_list scope type identifier START_PAR END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 627


Estado 590

  153 method_decl_statement: modifier_list scope type identifier START_PAR parameter_list . END_PAR method_body
  154 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 628
    COMMA    deslocar, e ir ao estado 525


Estado 591

  187 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 187 (operator_overloading)


Estado 592

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  188 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 629


Estado 593

  139 method_decl_statement: type identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 139 (method_decl_statement)


Estado 594

  208 id_list: id_list COMMA identifier ASSIGN expression .  [SEMI, COMMA]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    $padrão  reduzir usando a regra 208 (id_list)


Estado 595

  225 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $padrão  reduzir usando a regra 225 (do_while_statement)


Estado 596

  226 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 630
    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 597

  213 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 213 (if_statement)


Estado 598

  220 cases_list: CASE expression . COLON statement_list
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    COLON         deslocar, e ir ao estado 631
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 599

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: DEFAULT COLON . statement_list
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 632
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 600

  217 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $padrão  reduzir usando a regra 217 (switch_statement)


Estado 601

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
  218 cases_list: cases_list CASE . expression COLON statement_list
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 34
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 199
    NULL_VALUE   deslocar, e ir ao estado 106
    SIZEOF       deslocar, e ir ao estado 111
    STACKALLOC   deslocar, e ir ao estado 112
    THIS         deslocar, e ir ao estado 115
    TRUE_VAL     deslocar, e ir ao estado 116
    TYPEOF       deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 124
    UINT_VAL     deslocar, e ir ao estado 125
    LONG_VAL     deslocar, e ir ao estado 126
    ULONG_VAL    deslocar, e ir ao estado 127
    FLOAT_VAL    deslocar, e ir ao estado 128
    DOUBLE_VAL   deslocar, e ir ao estado 129
    DECIMAL_VAL  deslocar, e ir ao estado 130
    CHAR_VAL     deslocar, e ir ao estado 131
    BYTE_VAL     deslocar, e ir ao estado 132
    SBYTE_VAL    deslocar, e ir ao estado 133
    SHORT_VAL    deslocar, e ir ao estado 134
    USHORT_VAL   deslocar, e ir ao estado 135
    STRING_VAL   deslocar, e ir ao estado 136

    value                   ir ao estado 147
    identifier              ir ao estado 200
    expression              ir ao estado 633
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 602

  219 cases_list: cases_list DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 634


Estado 603

  186 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 186 (operator_overloading)


Estado 604

  156 method_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 156 (method_body)


Estado 605

  162 parameter: modifier_list type identifier expression .  [END_PAR, COMMA]
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276

    $padrão  reduzir usando a regra 162 (parameter)


Estado 606

  189 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 189 (operator_overloading)


Estado 607

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  190 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 635


Estado 608

  141 method_decl_statement: scope VOID identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 141 (method_decl_statement)


Estado 609

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 636


Estado 610

  154 parameter_list: parameter_list . COMMA parameter
  194 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 637
    COMMA    deslocar, e ir ao estado 525


Estado 611

  146 method_decl_statement: scope modifier_list VOID identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 146 (method_decl_statement)


Estado 612

  147 method_decl_statement: scope modifier_list VOID identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 638


Estado 613

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 639


Estado 614

  154 parameter_list: parameter_list . COMMA parameter
  196 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 640
    COMMA    deslocar, e ir ao estado 525


Estado 615

  148 method_decl_statement: scope modifier_list type identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 148 (method_decl_statement)


Estado 616

  149 method_decl_statement: scope modifier_list type identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 641


Estado 617

  191 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 191 (operator_overloading)


Estado 618

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  192 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 642


Estado 619

  143 method_decl_statement: scope type identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 143 (method_decl_statement)


Estado 620

  145 method_decl_statement: modifier_list VOID identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 145 (method_decl_statement)


Estado 621

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 643


Estado 622

  154 parameter_list: parameter_list . COMMA parameter
  198 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 644
    COMMA    deslocar, e ir ao estado 525


Estado 623

  150 method_decl_statement: modifier_list scope VOID identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 150 (method_decl_statement)


Estado 624

  151 method_decl_statement: modifier_list scope VOID identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 645


Estado 625

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 646


Estado 626

  154 parameter_list: parameter_list . COMMA parameter
  200 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 647
    COMMA    deslocar, e ir ao estado 525


Estado 627

  152 method_decl_statement: modifier_list scope type identifier START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 152 (method_decl_statement)


Estado 628

  153 method_decl_statement: modifier_list scope type identifier START_PAR parameter_list END_PAR . method_body
  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 648


Estado 629

  188 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 188 (operator_overloading)


Estado 630

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 loop_body: . START_CURLY statement_list END_CURLY
  223          | . statement
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226              | FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 211
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 212
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    loop_body               ir ao estado 649
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 631

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: CASE expression COLON . statement_list
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 650
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 632

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 221 (cases_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 633

  218 cases_list: cases_list CASE expression . COLON statement_list
  260 unary_operations: expression . INCREMENT
  261                 | expression . DECREMENT
  271 binary_operations: expression . ADD expression
  272                  | expression . SUB expression
  273                  | expression . MUL expression
  274                  | expression . DIV expression
  275                  | expression . MOD expression
  276                  | expression . RIGHT_SHIFT expression
  277                  | expression . LEFT_SHIFT expression
  278                  | expression . AND expression
  279                  | expression . OR expression
  280                  | expression . LESS_THEN expression
  281                  | expression . GREATER_THEN expression
  282                  | expression . LEQ expression
  283                  | expression . GEQ expression
  284                  | expression . EQ expression
  285                  | expression . NOT_EQ expression
  286                  | expression . BIT_AND expression
  287                  | expression . BIT_OR expression
  288                  | expression . DOUBLE_QMARK expression
  289                  | expression . BIT_XOR expression
  290                  | expression . IS expression
  291                  | expression . AS expression
  292                  | expression . IN expression
  293 ternary_operations: expression . QMARK expression COLON expression
  304 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 250
    ADD           deslocar, e ir ao estado 251
    SUB           deslocar, e ir ao estado 252
    DIV           deslocar, e ir ao estado 253
    MUL           deslocar, e ir ao estado 254
    MOD           deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 256
    BIT_XOR       deslocar, e ir ao estado 257
    COLON         deslocar, e ir ao estado 651
    LESS_THEN     deslocar, e ir ao estado 259
    GREATER_THEN  deslocar, e ir ao estado 260
    BIT_AND       deslocar, e ir ao estado 261
    BIT_OR        deslocar, e ir ao estado 262
    EQ            deslocar, e ir ao estado 263
    GEQ           deslocar, e ir ao estado 264
    LEQ           deslocar, e ir ao estado 265
    NOT_EQ        deslocar, e ir ao estado 266
    LEFT_SHIFT    deslocar, e ir ao estado 267
    RIGHT_SHIFT   deslocar, e ir ao estado 268
    AND           deslocar, e ir ao estado 269
    OR            deslocar, e ir ao estado 270
    DOUBLE_QMARK  deslocar, e ir ao estado 271
    INCREMENT     deslocar, e ir ao estado 272
    DECREMENT     deslocar, e ir ao estado 273
    AS            deslocar, e ir ao estado 274
    IN            deslocar, e ir ao estado 275
    IS            deslocar, e ir ao estado 276


Estado 634

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  219 cases_list: cases_list DEFAULT COLON . statement_list
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 652
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 635

  190 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 190 (operator_overloading)


Estado 636

  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 193 (operator_overloading)


Estado 637

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  194 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 653


Estado 638

  147 method_decl_statement: scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 147 (method_decl_statement)


Estado 639

  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 195 (operator_overloading)


Estado 640

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  196 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 654


Estado 641

  149 method_decl_statement: scope modifier_list type identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 149 (method_decl_statement)


Estado 642

  192 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 192 (operator_overloading)


Estado 643

  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 197 (operator_overloading)


Estado 644

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  198 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 655


Estado 645

  151 method_decl_statement: modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 151 (method_decl_statement)


Estado 646

  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 199 (operator_overloading)


Estado 647

  156 method_body: . START_CURLY statement_list END_CURLY
  157            | . LAMBDA expression
  158            | . SEMI
  200 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 518
    SEMI         deslocar, e ir ao estado 519
    LAMBDA       deslocar, e ir ao estado 520

    method_body  ir ao estado 656


Estado 648

  153 method_decl_statement: modifier_list scope type identifier START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 153 (method_decl_statement)


Estado 649

  226 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $padrão  reduzir usando a regra 226 (for_statement)


Estado 650

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 220 (cases_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 651

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  218 cases_list: cases_list CASE expression COLON . statement_list
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 657
    statement               ir ao estado 151
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 652

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  219 cases_list: cases_list DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 219 (cases_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177


Estado 653

  194 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 194 (operator_overloading)


Estado 654

  196 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 196 (operator_overloading)


Estado 655

  198 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 198 (operator_overloading)


Estado 656

  200 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 200 (operator_overloading)


Estado 657

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . identifier
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . identifier QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 identifier: . IDENTIFIER
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS identifier class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS identifier class_father START_CURLY statement_list END_CURLY
   95           | . CLASS identifier class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT identifier START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT identifier START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT identifier START_CURLY statement_list END_CURLY
  100            | . STRUCT identifier START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE identifier START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE identifier START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE identifier START_CURLY statement_list END_CURLY
  105               | . INTERFACE identifier START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM identifier START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM identifier START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM identifier START_CURLY enum_list END_CURLY
  110          | . ENUM identifier START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . label
  133          | . go_to_statement
  134          | . expression SEMI
  135          | . SEMI
  136 method_decl_statement: . VOID identifier START_PAR END_PAR method_body
  137                      | . VOID identifier START_PAR parameter_list END_PAR method_body
  138                      | . type identifier START_PAR END_PAR method_body
  139                      | . type identifier START_PAR parameter_list END_PAR method_body
  140                      | . scope VOID identifier START_PAR END_PAR method_body
  141                      | . scope VOID identifier START_PAR parameter_list END_PAR method_body
  142                      | . scope type identifier START_PAR END_PAR method_body
  143                      | . scope type identifier START_PAR parameter_list END_PAR method_body
  144                      | . modifier_list VOID identifier START_PAR END_PAR method_body
  145                      | . modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  146                      | . scope modifier_list VOID identifier START_PAR END_PAR method_body
  147                      | . scope modifier_list VOID identifier START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list type identifier START_PAR END_PAR method_body
  149                      | . scope modifier_list type identifier START_PAR parameter_list END_PAR method_body
  150                      | . modifier_list scope VOID identifier START_PAR END_PAR method_body
  151                      | . modifier_list scope VOID identifier START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope type identifier START_PAR END_PAR method_body
  153                      | . modifier_list scope type identifier START_PAR parameter_list END_PAR method_body
  185 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  186                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  187                     | . type OPERATOR operator START_PAR END_PAR method_body
  188                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  190                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  198                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 return_statement: . RETURN expression
  202 var_decl_statement: . type id_list SEMI
  203                   | . modifier type id_list SEMI
  204 attr_decl_statement: . scope type id_list SEMI
  205                    | . modifier_list scope type id_list SEMI
  206                    | . scope modifier_list type id_list SEMI
  211 if_else_statement: . if_statement
  212                  | . if_statement else_statement
  213 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  214             | . IF START_PAR expression END_PAR statement
  217 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  218 cases_list: cases_list CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  224 while_statement: . WHILE START_PAR expression END_PAR loop_body
  225 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  226 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  227 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  228 checked_scope: . CHECKED START_PAR expression END_PAR
  229              | . CHECKED START_CURLY statement_list END_CURLY
  230 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  231                | . UNCHECKED START_CURLY statement_list END_CURLY
  232 label: . identifier COLON
  233 go_to_statement: . GOTO identifier
  234 expression: . value
  235           | . START_PAR expression END_PAR
  236           | . assignment_expressions
  237           | . unary_operations
  238           | . binary_operations
  239           | . ternary_operations
  240           | . method_invoking
  241           | . attr_access
  242           | . obj_instancing
  243           | . matrix_indexing
  244           | . matrix_instancing
  245           | . CONTINUE
  246           | . BREAK
  247 obj_instancing: . NEW identifier START_PAR END_PAR
  248               | . NEW identifier START_PAR argument_list END_PAR
  249 assignment_expressions: . attr_access ASSIGN expression
  250                       | . attr_access ADD_ASSIGN expression
  251                       | . attr_access SUB_ASSIGN expression
  252                       | . attr_access MUL_ASSIGN expression
  253                       | . attr_access DIV_ASSIGN expression
  254                       | . attr_access MOD_ASSIGN expression
  255                       | . attr_access BIT_AND_ASSIGN expression
  256                       | . attr_access BIT_OR_ASSIGN expression
  257                       | . attr_access BIT_XOR_ASSIGN expression
  258                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  259                       | . attr_access LEFT_SHIFT_ASSIGN expression
  260 unary_operations: . expression INCREMENT
  261                 | . expression DECREMENT
  262                 | . INCREMENT expression
  263                 | . DECREMENT expression
  264                 | . ADD expression
  265                 | . SUB expression
  266                 | . BIT_NOT expression
  267                 | . NOT expression
  268                 | . TYPEOF START_PAR expression END_PAR
  269                 | . SIZEOF START_PAR expression END_PAR
  270                 | . STACKALLOC START_PAR expression END_PAR
  271 binary_operations: . expression ADD expression
  272                  | . expression SUB expression
  273                  | . expression MUL expression
  274                  | . expression DIV expression
  275                  | . expression MOD expression
  276                  | . expression RIGHT_SHIFT expression
  277                  | . expression LEFT_SHIFT expression
  278                  | . expression AND expression
  279                  | . expression OR expression
  280                  | . expression LESS_THEN expression
  281                  | . expression GREATER_THEN expression
  282                  | . expression LEQ expression
  283                  | . expression GEQ expression
  284                  | . expression EQ expression
  285                  | . expression NOT_EQ expression
  286                  | . expression BIT_AND expression
  287                  | . expression BIT_OR expression
  288                  | . expression DOUBLE_QMARK expression
  289                  | . expression BIT_XOR expression
  290                  | . expression IS expression
  291                  | . expression AS expression
  292                  | . expression IN expression
  293 ternary_operations: . expression QMARK expression COLON expression
  294 attr_access: . identifier DOT attr_access
  295            | . identifier
  296            | . THIS DOT attr_access
  297            | . BASE DOT attr_access
  298 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  305 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 34
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 98
    FOR           deslocar, e ir ao estado 99
    FOREACH       deslocar, e ir ao estado 100
    GOTO          deslocar, e ir ao estado 101
    IF            deslocar, e ir ao estado 102
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 103
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 104
    NEW           deslocar, e ir ao estado 105
    NULL_VALUE    deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 107
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 109
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 110
    SIZEOF        deslocar, e ir ao estado 111
    STACKALLOC    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 113
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 114
    THIS          deslocar, e ir ao estado 115
    TRUE_VAL      deslocar, e ir ao estado 116
    TYPEOF        deslocar, e ir ao estado 117
    UINT_TYPE     deslocar, e ir ao estado 118
    ULONG_TYPE    deslocar, e ir ao estado 119
    UNCHECKED     deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 121
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 122
    WHILE         deslocar, e ir ao estado 123
    INT_VAL       deslocar, e ir ao estado 124
    UINT_VAL      deslocar, e ir ao estado 125
    LONG_VAL      deslocar, e ir ao estado 126
    ULONG_VAL     deslocar, e ir ao estado 127
    FLOAT_VAL     deslocar, e ir ao estado 128
    DOUBLE_VAL    deslocar, e ir ao estado 129
    DECIMAL_VAL   deslocar, e ir ao estado 130
    CHAR_VAL      deslocar, e ir ao estado 131
    BYTE_VAL      deslocar, e ir ao estado 132
    SBYTE_VAL     deslocar, e ir ao estado 133
    SHORT_VAL     deslocar, e ir ao estado 134
    USHORT_VAL    deslocar, e ir ao estado 135
    STRING_VAL    deslocar, e ir ao estado 136

    $padrão  reduzir usando a regra 218 (cases_list)

    scope                   ir ao estado 137
    modifier_list           ir ao estado 138
    modifier                ir ao estado 139
    type                    ir ao estado 140
    nullable_type           ir ao estado 141
    simple_type             ir ao estado 142
    numeric_type            ir ao estado 143
    integer_type            ir ao estado 144
    floating_type           ir ao estado 145
    matrix_type             ir ao estado 146
    value                   ir ao estado 147
    identifier              ir ao estado 148
    obj_decl                ir ao estado 149
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 247
    method_decl_statement   ir ao estado 152
    operator_overloading    ir ao estado 153
    return_statement        ir ao estado 154
    var_decl_statement      ir ao estado 155
    attr_decl_statement     ir ao estado 156
    if_else_statement       ir ao estado 157
    if_statement            ir ao estado 158
    switch_statement        ir ao estado 159
    while_statement         ir ao estado 160
    do_while_statement      ir ao estado 161
    for_statement           ir ao estado 162
    foreach_statement       ir ao estado 163
    checked_scope           ir ao estado 164
    unchecked_scope         ir ao estado 165
    label                   ir ao estado 166
    go_to_statement         ir ao estado 167
    expression              ir ao estado 168
    obj_instancing          ir ao estado 169
    assignment_expressions  ir ao estado 170
    unary_operations        ir ao estado 171
    binary_operations       ir ao estado 172
    ternary_operations      ir ao estado 173
    attr_access             ir ao estado 174
    method_invoking         ir ao estado 175
    matrix_indexing         ir ao estado 176
    matrix_instancing       ir ao estado 177
